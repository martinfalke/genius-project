{"version":3,"sources":["state/auth/authTypes.js","state/utils.js","state/auth/authReducer.js","state/fbase/fbaseTypes.js","state/fbase/fbaseReducer.js","state/search/searchTypes.js","state/search/searchReducer.js","state/user/userTypes.js","state/user/userReducer.js","state/playlist/playlistTypes.js","state/playlist/playlistReducer.js","state/tracks/tracksTypes.js","state/tracks/tracksReducer.js","state/rootReducer.js","state/auth/authSagas.js","api/firebaseConfig.js","api/firebaseAuth.js","state/fbase/fbaseSagas.js","api/spotifyUtil.js","api/spotifySearch.js","state/search/searchSagas.js","api/spotifyUser.js","state/user/userSagas.js","state/playlist/playlistActions.js","api/spotifyPlaylist.js","state/playlist/playlistSagas.js","state/tracks/tracksActions.js","state/tracks/tracksSagas.js","state/rootSaga.js","state/store.js","images/LOGO.svg","state/search/searchActions.js","images/Icons/Search.svg","views/SearchView.js","images/Icons/Spotify_Icon.png","images/Icons/Inboxes fill.svg","views/SearchResultView.js","presenters/SearchPresenter.js","views/PlaylistView.js","views/LoadingView.js","presenters/PlaylistPresenter.js","views/AuthorizedView.js","state/fbase/fbaseActions.js","presenters/AuthorizedPresenter.js","state/user/userActions.js","state/auth/authActions.js","presenters/LoginPresenter.js","api/spotifyAuth.js","views/StartView.js","presenters/StartPresenter.js","App.js","reportWebVitals.js","index.js"],"names":["AUTH_INIT_TEST","AUTH_SPOTIFY","AUTH_SPOTIFY_ERROR","AUTH_SPOTIFY_SET_STATE","AUTH_SPOTIFY_LOGOUT","createAction","type","payload","createReducer","initialState","handlers","state","action","hasOwnProperty","status","spotify","token","expires_in","spotify_string","error","types","secondsUntilExpiration","localStorage","setItem","Date","now","toUTCString","removeItem","FBASE_INIT","FBASE_INIT_COMPLETED","FBASE_AUTHENTICATE","FBASE_AUTHENTICATE_SUCCESS","FBASE_SET_UID","FBASE_SIGN_OUT","FBASE_SIGN_OUT_SUCCESS","FBASE_SIGN_OUT_ERROR","app","auth","uid","SEARCH_INIT_TEST","SEARCH_GET","SEARCH_GET_ERROR","SEARCH_GET_SUCCESS","SEARCH_NEXT","SEARCH_PREV","latestQuery","activePage","isExact","resultTypes","USER_INIT","USER_GET","USER_GET_SUCCESS","USER_GET_ERROR","id","display_name","country","authTypes","PLAYLIST_MOVE_UP_SONG","PLAYLIST_MOVE_DOWN_SONG","PLAYLIST_DELETE_FROM_LIST","PLAYLIST_GET","PLAYLIST_TRACK_GET","PLAYLIST_MOVE_UP_SONG_SUCCESS","PLAYLIST_MOVE_UP_SONG_ERROR","PLAYLIST_MOVE_DOWN_SONG_SUCCESS","PLAYLIST_MOVE_DOWN_SONG_ERROR","PLAYLIST_DELETE_FROM_LIST_SUCCESS","PLAYLIST_DELETE_FROM_LIST_ERROR","PLAYLIST_GET_SUCCESS","PLAYLIST_GET_ERROR","PLAYLIST_TRACK_GET_SUCCESS","PLAYLIST_TRACK_GET_ERROR","PLAYLIST_TRACK_GET_ALL_DONE","PLAYLIST_SELECT","selectedList","playlists","trackIndex","featureMaps","playlistsFetched","tracksFetched","playlistsObj","forEach","playlist","snapshot_id","name","owner","description","image","images","length","external_urls","collaborative","tracks","Object","values","playlist_id","trackIds","map","track","CI","playlistobj","reorderedList","tmp","trackList","updatedList","slice","concat","playlistId","PLAYLIST_ADD_TO_TRACKS","TRACKS_SAVE_LOCATIONS","TRACKS_DELETE_LOCATIONS","stash","selectedTrack","trackLocations","previewPlayer","trackId","trackLocationsObj","updatedStash","combineReducers","fbase","search","user","lists","handleAuthInit","authRootSaga","take","all","takeLatest","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","handleSignIn","signInAnonymously","then","response","catch","handleSignOut","signOut","initializeFirebase","authenticateFirebase","logout","fbaseRootSaga","call","initializeApp","config","initializeAuth","persistence","browserSessionPersistence","popupRedirectResolver","undefined","put","getAuth","takeLeading","baseUrl","requestTypes","handleHttpResponse","json","ok","startObj","retry_after","headers","get","assign","statusText","Promise","reject","spotifyApiCall","endpoint","method","bodyObj","content_type","finalEndpoint","startsWith","parameters","keys","JSON","stringify","fetch","getSearchResults","searchQuery","searchTypes","pageInfo","baseEndpoint","typesListString","reduce","tot","i","arr","queryEndpoint","encodeURIComponent","getSearch","getNextPage","getPrevPage","searchRootSaga","select","getResultTypes","query","data","getNextPageURL","nextPage","getPrevPageURL","prevPage","next","previous","getCurrentUser","getUser","userRootSaga","fbaseTypes","actions","moveUpSong","moveDownSong","deleteFromList","track_uri","fetchPlaylists","fetchTrack","selectPlaylist","fetchPlaylist","offset","moveTrack","range_start","insert_before","deleteFromPlaylist","handleMoveUp","handleMoveDown","handleDeleteFromPlaylist","handleFetchPlaylist","handleFetchTrack","watchTracksFetch","playlistRootSaga","getToken","console","log","tracksTypes","total","remainingPlaylists","allPlaylists","items","delay","remainingTracks","allTracks","filter","wt","is_local","wrappedTrack","album_name","album","album_image","artists","a","preview_url","uri","duration","duration_ms","buffer","buffers","expanding","actionChannel","trackFetchChannel","firstHandled","isEmpty","takeEvery","fork","addToTracks","tracksRootSaga","playlistChannel","rootSaga","channel","window","__REDUX_DEVTOOLS_EXTENSION__","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","initSearch","getPreviousPage","SearchView","props","className","alt","src","LOGO","Form","Group","controlId","Control","autoFocus","tabVisible","placeholder","onChange","e","onSearch","target","value","searchicon","SearchResultView","defaultValue","Table","size","class","results","item","index","onClick","Card","artist","Button","variant","trackmarked","href","spotifyUrl","spotifyicon","currentPage","aria-label","onPrevPage","disabled","aria-hidden","numPages","onNextPage","mapDispatchToProps","searchActions","connect","totalResults","itemsArray","artistString","smallestAlbumImage","smallest","height","trackMinutes","Math","floor","trackSeconds","round","url","previewSong","useState","setSearch","useEffect","isTabVisible","setIsTabVisible","observer","MutationObserver","searchTab","document","querySelector","classList","contains","observe","attributes","disconnect","getElementById","focus","page","setPage","ceil","term","setNextPage","setPrevPage","PlaylistView","selectedPlaylist","onSelectPlaylist","searchTerm","onSearchTerm","width","borderless","onAddToTracks","trackmarkicon","ButtonGroup","actionsDisabled","onMoveUpSong","onMoveDownSong","onDeleteSong","LoadingView","sizeClass","playlistActions","fetchTracks","tracksActions","selectedPlaylistData","playlistTracks","trackObj","list","setSearchTerm","searchResults","setSearchResults","searcher","FuzzySearch","caseSensitive","AuthorizedView","Tab","Container","defaultActiveKey","Nav","Item","Link","eventKey","NavDropdown","title","username","Navbar","Brand","Content","Pane","initFbase","authFbase","setUid","fetchSpotifyUser","initUser","fetchUser","fbaseActions","history","useHistory","push","initAuth","saveSpotifyToken","saveSpotifyTokenError","setSpotifyState","authActions","params","useParams","getItem","scope","d","authUrl","StartView","loginUrl","spotifyString","setSpotifyString","randomString","len","Uint8Array","crypto","getRandomValues","Array","from","dec","toString","padStart","join","generateSpotifyString","spotifyAuthUrl","initFirebase","fbaseApp","fbaseAuth","fbaseUid","initialized","setInitialized","sessionStorage","storedToken","tokenExpiration","parse","getTime","clear","onAuthStateChanged","path","component","LoginPresenter","exact","StartPresenter","AuthorizedPresenter","render","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","hashType"],"mappings":"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","file":"static/js/main.ed5266cc.chunk.js","sourcesContent":["// src/state/auth/authTypes.js\r\nexport const AUTH_INIT_TEST = 'AUTH_INIT_TEST';\r\nexport const AUTH_SPOTIFY = 'AUTH_SPOTIFY';\r\nexport const AUTH_SPOTIFY_ERROR = 'AUTH_SPOTIFY_ERROR';\r\nexport const AUTH_SPOTIFY_SET_STATE = 'AUTH_SPOTIFY_SET_STATE';\r\nexport const AUTH_SPOTIFY_LOGOUT = 'AUTH_SPOTIFY_LOGOUT';","// redux/utils.js\r\n\r\nexport const createAction =\r\n    (type, payload = {}) => ({type, ...payload});\r\n\r\n// create reducer given its handlers and default/initial state\r\nexport const createReducer = (initialState, handlers) =>\r\n    // the reducer takes an action and the current state to update the state with the action\r\n    (state = initialState, action) => {\r\n        // there is a handler for the action type, call it\r\n        if(handlers.hasOwnProperty(action.type))\r\n            return handlers[action.type](state, action);\r\n        // there is no handler for the action type, leave state unchanged\r\n        else\r\n            return state;\r\n    }\r\n\r\n\r\nexport const createExpirationDate = (secondsUntilExpiration) => {\r\n    return new Date(Date.now() + secondsUntilExpiration*1000);\r\n}\r\n\r\nexport const isDateExpired = (expirationDate) => (expirationDate.getTime() < Date.now());\r\n\r\nexport const isDateExpiredIn = (expirationDate, remainingSeconds) => (expirationDate.getTime()+remainingSeconds*1000 < Date.now());","// src/state/auth/authReducer.js\r\nimport * as types from './authTypes';\r\nimport { createExpirationDate, createReducer } from '../utils';\r\n\r\nconst initialState = {\r\n    status: null,\r\n    spotify: {\r\n        token: null,\r\n        expires_in: 0,\r\n        spotify_string: null,\r\n        error: null\r\n    }\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n    [types.AUTH_INIT_TEST]: (state, action) => {\r\n        return { ...state, status: \"OK\"};\r\n    },\r\n    [types.AUTH_SPOTIFY]: (state, action) => {\r\n        localStorage.setItem(\"spotifyToken\", action.token);\r\n        localStorage.setItem(\"spotifyExpiration\", createExpirationDate(3600-5).toUTCString()); // set expiration of token to 1 hour minus 5 seconds\r\n        return { ...state,\r\n            spotify: {\r\n                token: action.token,\r\n                expires_in: action.expires_in,\r\n                spotify_string: state.spotify.spotify_string,\r\n                error: null\r\n            }\r\n        }\r\n    },\r\n    [types.AUTH_SPOTIFY_ERROR]: (state, action) => {\r\n        return { ...state,\r\n            spotify: {\r\n                token: null,\r\n                expires_in: null,\r\n                spotify_string: state.spotify.spotify_string,\r\n                error: action.error\r\n            }\r\n        }\r\n    },\r\n    [types.AUTH_SPOTIFY_SET_STATE]: (state, action) => {\r\n        localStorage.setItem(\"spotifyState\", action.spotify_string);\r\n        return { ...state,\r\n            spotify: {\r\n                ...state.spotify,\r\n                spotify_string: action.spotify_string\r\n            }\r\n        }\r\n    },\r\n    [types.AUTH_SPOTIFY_LOGOUT]: (state, action) => {\r\n        localStorage.removeItem(\"spotifyToken\");\r\n        localStorage.removeItem(\"spotifyExpiration\");\r\n        return {\r\n            ...initialState\r\n        }\r\n    }\r\n});","// src/state/fbase/fbaseTypes.js\r\nexport const FBASE_INIT = 'FBASE_INIT';\r\nexport const FBASE_INIT_COMPLETED = 'FBASE_INIT_COMPLETED';\r\nexport const FBASE_AUTHENTICATE = 'FBASE_AUTHENTICATE';\r\nexport const FBASE_AUTHENTICATE_SUCCESS = 'FBASE_AUTHENTICATE_SUCCESS';\r\nexport const FBASE_AUTHENTICATE_ERROR = 'FBASE_AUTHENTICATE_ERROR';\r\nexport const FBASE_SET_UID = 'FBASE_SET_UID';\r\nexport const FBASE_SIGN_OUT = 'FBASE_SIGN_OUT';\r\nexport const FBASE_SIGN_OUT_SUCCESS = 'FBASE_SIGN_OUT_SUCCESS';\r\nexport const FBASE_SIGN_OUT_ERROR = 'FBASE_SIGN_OUT_ERROR';\r\n","// src/state/fbase/fbaseReducer.js\r\nimport * as types from './fbaseTypes';\r\nimport { createReducer } from '../utils';\r\n\r\nconst initialState = {\r\n    status: null,\r\n    app: null,\r\n    auth: null,\r\n    uid: \"\",\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n    [types.FBASE_INIT_COMPLETED]: (state, action) => {\r\n        return { ...state, status: \"OK\", app: action.payload.app, auth: action.payload.auth };\r\n    },\r\n    [types.FBASE_AUTHENTICATE_SUCCESS]: (state, action) => {\r\n        return { ...state, status: \"OK\", ...action.payload };\r\n    },\r\n    [types.FBASE_SET_UID]: (state, action) => {\r\n        return { ...state, uid: action.uid};\r\n    },\r\n    [types.FBASE_SIGN_OUT]: (state, action) => {\r\n        return { ...initialState };\r\n    },\r\n    [types.FBASE_SIGN_OUT_SUCCESS]: (state, action) => {\r\n        return { ...initialState };\r\n    },\r\n    [types.FBASE_SIGN_OUT_ERROR]: (state, action) => {\r\n        return { ...initialState, status: \"ERROR\"}\r\n    }\r\n});","// src/state/search/searchTypes.js\r\nexport const SEARCH_INIT_TEST = 'SEARCH_INIT_TEST';\r\nexport const SEARCH_GET = 'SEARCH_GET';\r\nexport const SEARCH_GET_ERROR = 'SEARCH_GET_ERROR';\r\nexport const SEARCH_GET_SUCCESS = 'SEARCH_GET_SUCCESS';\r\nexport const SEARCH_NEXT = 'SEARCH_NEXT'; \r\nexport const SEARCH_PREV = 'SEARCH_PREV';\r\n","// src/state/search/searchReducer.js\r\nimport * as types from './searchTypes';\r\nimport { createReducer } from '../utils';\r\n\r\nconst initialState = {\r\n    status: null,\r\n    latestQuery: null,\r\n    activePage: null,\r\n    isExact: false,\r\n    resultTypes: [\"track\"]\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n    [types.SEARCH_INIT_TEST]: (state, action) => {\r\n        return { ...state, status: \"initialized\"};\r\n    },\r\n    [types.SEARCH_GET]: (state, action) => {\r\n        return { ...state, status: \"Query accepted\"}\r\n    },\r\n    [types.SEARCH_GET_SUCCESS]: (state, action) => {\r\n        return { ...state, activePage: action.payload, status: \"API OK\"}\r\n    },\r\n    [types.SEARCH_GET_ERROR]: (state, action) => {\r\n        return { ...state, activePage: initialState.activePage, status: \"API ERROR\"}\r\n    },\r\n    [types.SEARCH_NEXT]: (state, action) => {\r\n        return { ...state, status: \"Next Page Found\"}\r\n    },\r\n    [types.SEARCH_PREV]: (state, action) => {\r\n        return { ...state, status: \"Prev Page Found\"}\r\n    }\r\n    \r\n});\r\n\r\n","// src/state/user/userTypes.js\r\nexport const USER_INIT = 'USER_INIT';\r\nexport const USER_GET = 'USER_GET';\r\nexport const USER_GET_SUCCESS = 'USER_GET_SUCCESS';\r\nexport const USER_GET_ERROR = 'USER_GET_ERROR';","// src/state/user/userReducer.js\r\nimport * as types from './userTypes';\r\nimport * as authTypes from '../auth/authTypes';\r\nimport { createReducer } from '../utils';\r\n\r\nconst initialState = {\r\n    status: null,\r\n    id: null,\r\n    display_name: null,\r\n    country: null,\r\n    error: null\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n    [types.USER_INIT]: (state, action) => {\r\n        return { ...state, status: \"OK\"};\r\n    },\r\n    [types.USER_GET_SUCCESS]: (state, action) => {\r\n        return { ...state, ...action.payload, error: null, status: \"OK\"}\r\n    },\r\n    [types.USER_GET_ERROR]: (state, action) => {\r\n        return { ...state, error: action.payload, status: \"ERROR\"}\r\n    },\r\n    [authTypes.AUTH_SPOTIFY_LOGOUT]: (state, action) => initialState,\r\n    \r\n});","// src/state/playlist/playlistTypes.js\n\n//for saga\nexport const PLAYLIST_MOVE_UP_SONG = 'PLAYLIST_MOVE_UP_SONG';\nexport const PLAYLIST_MOVE_DOWN_SONG = 'PLAYLIST_MOVE_DOWN_SONG';\nexport const PLAYLIST_DELETE_FROM_LIST = 'PLAYLIST_DELETE_FROM_LIST';\nexport const PLAYLIST_GET = \"PLAYLIST_GET\";\nexport const PLAYLIST_TRACK_GET = \"PLAYLIST_TRACK_GET\";\n\n\n\n//for reducer\nexport const PLAYLIST_MOVE_UP_SONG_SUCCESS = 'PLAYLIST_MOVE_UP_SONG_SUCCESS';\nexport const PLAYLIST_MOVE_UP_SONG_ERROR = 'PLAYLIST_MOVE_UP_SONG_ERROR';\nexport const PLAYLIST_MOVE_DOWN_SONG_SUCCESS = 'PLAYLIST_MOVE_DOWN_SONG_SUCCESS';\nexport const PLAYLIST_MOVE_DOWN_SONG_ERROR = 'PLAYLIST_MOVE_DOWN_SONG_ERROR';\nexport const PLAYLIST_DELETE_FROM_LIST_SUCCESS = 'PLAYLIST_DELETE_FROM_LIST_SUCCESS';\nexport const PLAYLIST_DELETE_FROM_LIST_ERROR = 'PLAYLIST_DELETE_FROM_LIST_ERROR';\nexport const PLAYLIST_GET_SUCCESS = \"PLAYLIST_GET_SUCCESS\";\nexport const PLAYLIST_GET_ERROR = \"PLAYLIST_GET_ERROR\";\nexport const PLAYLIST_TRACK_GET_SUCCESS = \"PLAYLIST_TRACK_GET_SUCCESS\";\nexport const PLAYLIST_TRACK_GET_ERROR = \"PLAYLIST_TRACK_GET_ERROR\";\nexport const PLAYLIST_TRACK_GET_ALL_DONE = \"PLAYLIST_TRACK_GET_ALL_DONE\";\nexport const PLAYLIST_SELECT = \"PLAYLIST_SELECT\";\n\n","// src/state/playlist/playlistReducer.js\r\nimport * as types from './playlistTypes';\r\nimport { createReducer } from '../utils';\r\n\r\nconst initialState = {\r\n    //initial state\r\n    status: null,\r\n    error: null,\r\n    selectedList: \"\",\r\n    playlists: {},\r\n    trackIndex: {},\r\n    featureMaps: {},\r\n    playlistsFetched: false,\r\n    tracksFetched: false,\r\n\r\n\r\n    //mock data\r\n    // status: null,\r\n    // selectedList: \"\",\r\n    // playlists: {           \r\n    //     \"1234\" : {\r\n    //         tracks: [\"test1\",\"test2\",\"test3\",\"test4\",\"test5\"]\r\n    //     }\r\n    // },\r\n    // trackIndex: {},\r\n    // featureMaps: {},\r\n    // playlistsFetched: false\r\n\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n    [types.PLAYLIST_GET_SUCCESS]: (state, action) => {\r\n        //console.log(action);\r\n        let playlistsObj = {};\r\n        action.payload.playlists.forEach(playlist => {\r\n            playlistsObj[playlist.id] = {\r\n                snapshot_id: playlist.snapshot_id,\r\n                name: playlist.name,\r\n                id: playlist.id,\r\n                owner: playlist.owner.display_name || playlist.owner.id,\r\n                description: playlist.description,\r\n                image: (playlist.images.length >= 2 && playlist.images[1]) || null,\r\n                external_urls: playlist.external_urls,\r\n                collaborative: playlist.collaborative,\r\n                tracks: null,\r\n            };\r\n        });\r\n\r\n        return {...state,\r\n            playlists: playlistsObj,\r\n            playlistsFetched: true,\r\n            selectedList: Object.values(playlistsObj)[0].id,\r\n            status: \"Fetch Playlists Success\",\r\n        }\r\n    },\r\n    [types.PLAYLIST_GET_ERROR]: (state, action) => {\r\n        return {...state,\r\n            error: action.payload, \r\n            status: \"ERROR\"\r\n        }\r\n    },\r\n\r\n    [types.PLAYLIST_TRACK_GET_SUCCESS]: (state, action) => {\r\n        const playlist_id = action.payload.playlist_id;\r\n        let trackIds = action.payload.tracks.map(track => track.id);\r\n        let trackIndex = state.trackIndex;\r\n        action.payload.tracks.forEach( track => {\r\n            if(!trackIndex.hasOwnProperty(track.id)){\r\n                trackIndex[track.id]=track;\r\n            }\r\n\r\n        });\r\n\r\n        return {...state,\r\n            playlists: {\r\n                ...state.playlists,\r\n                [playlist_id]:{\r\n                    ...state.playlists[playlist_id],\r\n                    tracks: trackIds\r\n                }\r\n                \r\n            },\r\n            trackIndex: {...trackIndex},\r\n        }\r\n    },\r\n    [types.PLAYLIST_TRACK_GET_ERROR]: (state, action) => {\r\n        return {...state,\r\n            error: action.payload, \r\n            status: \"ERROR\"\r\n        }\r\n    },\r\n    [types.PLAYLIST_TRACK_GET_ALL_DONE]: (state, action) => {\r\n        return { ...state, tracksFetched: true };\r\n    },\r\n\r\n    [types.PLAYLIST_MOVE_UP_SONG_SUCCESS]: (state, action) => {\r\n        //console.log(\"move up\");\r\n        //const playlistId = action.playlistId;\r\n        let snapshot_id = action.payload.snapshot_id;\r\n        const CI = action.payload.CI;\r\n        if(CI === 0){\r\n            return state;\r\n        }\r\n\r\n        let playlistobj = state.playlists[state.selectedList];\r\n        let reorderedList = playlistobj.tracks;\r\n        // console.log(\"before\")\r\n        // console.log(playlistobj.tracks)\r\n        // console.log(\"CI\" +CI)\r\n\r\n        let tmp = reorderedList[CI-1];\r\n        reorderedList[CI-1] = reorderedList[CI];\r\n        reorderedList[CI] = tmp;\r\n\r\n        // console.log(\"reordered\");\r\n        // console.log(reorderedList)\r\n\r\n        return { ...state, \r\n                playlists: {\r\n                    ...state.playlists,\r\n                    [state.selectedList]: {\r\n                        ...playlistobj,\r\n                        snapshot_id: snapshot_id,\r\n                        tracks: [...reorderedList]\r\n                    },\r\n\r\n            }\r\n        };\r\n    },\r\n    [types.PLAYLIST_MOVE_UP_SONG_ERROR]: (state, action) => {\r\n        return {...state,\r\n            error: action.payload, \r\n            status: \"ERROR\"\r\n        }\r\n    },\r\n\r\n    [types.PLAYLIST_MOVE_DOWN_SONG_SUCCESS]: (state, action) => {\r\n        //console.log(\"move down\");\r\n        let snapshot_id = action.payload.snapshot_id;\r\n        //const playlistId = action.playlistId;\r\n        const CI = action.payload.CI;\r\n\r\n        let playlistobj = state.playlists[state.selectedList];\r\n        if(CI === playlistobj.tracks.length - 1){\r\n            return state;\r\n        }\r\n        let reorderedList = playlistobj.tracks;\r\n\r\n        let tmp = reorderedList[CI];\r\n        reorderedList[CI] = reorderedList[CI+1];\r\n        reorderedList[CI+1] = tmp;\r\n\r\n        return { ...state, \r\n                playlists: {\r\n                    ...state.playlists,\r\n                    [state.selectedList]: {\r\n                        ...playlistobj,\r\n                        snapshot_id: snapshot_id,\r\n                        tracks: [...reorderedList]\r\n                    },\r\n\r\n            }\r\n        };\r\n    },\r\n    [types.PLAYLIST_MOVE_DOWN_SONG_ERROR]: (state, action) => {\r\n        return {...state,\r\n            error: action.payload, \r\n            status: \"ERROR\"\r\n        }\r\n    },\r\n\r\n    [types.PLAYLIST_DELETE_FROM_LIST_SUCCESS]: (state, action) => {\r\n        let snapshot_id = action.payload.snapshot_id;\r\n        const CI = action.payload.CI;\r\n        let playlistobj = state.playlists[state.selectedList];\r\n        let trackList = playlistobj.tracks;\r\n        let updatedList = trackList.slice(0, CI).concat(trackList.slice(CI+1, trackList.length));\r\n\r\n        return { ...state, \r\n                        playlists: {\r\n                            ...state.playlists,\r\n                            [state.selectedList]: {\r\n                                ...playlistobj,\r\n                                snapshot_id: snapshot_id,\r\n                                tracks: updatedList\r\n                            },\r\n\r\n                    }\r\n                };\r\n    },\r\n    [types.PLAYLIST_DELETE_FROM_LIST_ERROR]: (state, action) => {\r\n        return {...state,\r\n            error: action.payload, \r\n            status: \"ERROR\"\r\n        }\r\n    },\r\n\r\n    [types.PLAYLIST_SELECT]: (state, action) => {\r\n        let playlistId = action.playlistId;\r\n\r\n        return {...state,\r\n            selectedList: playlistId,\r\n        }\r\n    },\r\n})","// src/state/tracks/tracksTypes.js\n//export const PLAYLIST_DELETE_FROM_LIST = 'PLAYLIST_DELETE_FROM_LIST';\nexport const PLAYLIST_ADD_TO_TRACKS = 'PLAYLIST_ADD_TO_TRACKS';\nexport const TRACKS_SAVE_LOCATIONS = 'TRACKS_SAVE_LOCATION';\nexport const TRACKS_DELETE_LOCATIONS = 'TRACKS_DELETE_LOCATIONS';\n","import * as types from './tracksTypes';\nimport { createReducer } from '../utils';\n\nconst initialState = {\n    status: null,\n    stash: [],\n    selectedTrack: \"\",\n    trackLocations: {},\n    previewPlayer: {},\n\n    //mock data\n    // status: null,\n    // stash: [\"s1\",\"s2\"],\n    // selectedTrack: \"s1\",\n    // trackLocations: {\n    //     \"s1\": {\n    //         \"p1\": true,\n    //         \"p2\": true\n    //     },\n    //     \"s2\": {\n    //         \"p1\": true\n    //     }\n    // },\n    // previewPlayer: {},\n}\n\nexport default createReducer(initialState, {\n    [types.TRACKS_DELETE_LOCATIONS]: (state, action) => {\n        const playlistId = action.payload.playlistId;\n        const trackId = action.payload.trackId;\n        let trackLocationsObj = state.trackLocations[trackId];\n\n        return {...state,\n            trackLocations: {\n                ...state.trackLocations,\n                [trackId]:{\n                    ...trackLocationsObj,\n                    [playlistId]: false\n                }\n            }\n        }\n    },\n    [types.PLAYLIST_ADD_TO_TRACKS]: (state, action) => {\n        const trackId = action.trackId;\n        let updatedStash = [...state.stash, trackId];\n\n        return {...state,\n            stash: updatedStash\n        }\n    },\n    [types.TRACKS_SAVE_LOCATIONS]: (state, action) => {\n        const playlist_id = action.payload.playlist_id;\n        let trackIds = action.payload.trackIds;\n        let trackLocations = state.trackLocations;\n        trackIds.forEach((trackId) => {\n            if(!trackLocations.hasOwnProperty(trackId)){\n                trackLocations[trackId] = {};\n            }\n            if(!trackLocations[trackId][playlist_id]){\n                trackLocations[trackId][playlist_id] = true;\n            }\n        });\n        return {\n            ...state,\n            trackLocations: {\n                ...trackLocations\n            }\n        };\n    }\n})","// src/state/rootReducer.js\r\nimport { combineReducers } from \"redux\";\r\nimport auth from \"./auth/authReducer\";\r\nimport fbase from './fbase/fbaseReducer';\r\nimport search from './search/searchReducer';\r\nimport user from './user/userReducer';\r\nimport lists from './playlist/playlistReducer';\r\nimport tracks from './tracks/tracksReducer';\r\n\r\n\r\n// TODO: import different reducers\r\n\r\n// TODO: add imported reducers in object\r\nexport default combineReducers(\r\n    { auth, fbase, search, user, lists, tracks}\r\n);","// src/state/auth/authSagas.js\r\nimport { all, take, takeLatest } from 'redux-saga/effects';\r\nimport * as types from './authTypes';\r\n\r\nfunction* handleAuthInit(){\r\n    while(true){\r\n        yield take(types.AUTH_INIT_TEST);\r\n    }\r\n}\r\n\r\nfunction* authRootSaga() {\r\n    yield all([\r\n        takeLatest(types.AUTH_INIT_TEST, handleAuthInit)\r\n    ])\r\n};\r\n\r\nexport default authRootSaga;","// src/api/firebaseConfig.js\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyD8zs9oK-BvtUICviOHLrVpcNOzbMvUR_k\",\r\n    authDomain: \"listify-project-56d94.firebaseapp.com\",\r\n    databaseURL: \"https://listify-project-56d94-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"listify-project-56d94\",\r\n    storageBucket: \"listify-project-56d94.appspot.com\",\r\n    messagingSenderId: \"108020178071\",\r\n    appId: \"1:108020178071:web:b81127db0ed946e8abddd2\"\r\n};\r\nexport default firebaseConfig;\r\n  ","// src/api/firebaseAuth.js\r\nimport { signInAnonymously, signOut } from 'firebase/auth';\r\n\r\nfunction handleSignIn(auth) {\r\n    return signInAnonymously(auth)\r\n        .then(response => ({response}))\r\n        .catch(error => ({error}));\r\n}\r\nfunction handleSignOut(auth) {\r\n    return signOut(auth)\r\n        .then(response => ({response}))\r\n        .catch(error => ({error}));\r\n}\r\n\r\nexport { handleSignIn, handleSignOut };","// src/state/fbase/fbaseSagas.js\r\nimport { all, call, put, takeLeading, takeLatest, select } from 'redux-saga/effects';\r\nimport * as types from './fbaseTypes';\r\nimport * as authTypes from '../auth/authTypes';\r\nimport { initializeApp } from 'firebase/app';\r\nimport config from '../../api/firebaseConfig';\r\nimport { initializeAuth, browserSessionPersistence, getAuth } from 'firebase/auth';\r\nimport { getDatabase, ref, set } from 'firebase/database';\r\nimport { handleSignIn, handleSignOut } from '../../api/firebaseAuth';\r\n\r\nfunction* initializeFirebase(){\r\n    const app = yield call(initializeApp, config);\r\n    const auth = yield call(initializeAuth, app, {persistence: browserSessionPersistence,\r\n        popupRedirectResolver: undefined,\r\n    });\r\n    yield put({'type': types.FBASE_INIT_COMPLETED, payload: {app, auth} });\r\n}\r\n\r\nfunction* authenticateFirebase(){\r\n    const auth = getAuth();\r\n    const { response, error } = yield call(handleSignIn, auth);\r\n    if(error){\r\n        yield put({'type': types.FBASE_AUTHENTICATE_ERROR, payload: error});\r\n    }else{\r\n        yield put({'type': types.FBASE_AUTHENTICATE_SUCCESS, payload: {...response}});\r\n    }\r\n}\r\n\r\nfunction* logout(){\r\n    const auth = getAuth();\r\n    yield put({'type': authTypes.AUTH_SPOTIFY_LOGOUT});\r\n    const { response, error } = yield call(handleSignOut, auth);\r\n    if(error){\r\n        yield put({'type': types.FBASE_SIGN_OUT_ERROR});\r\n    }else{\r\n        yield put({'type': types.FBASE_SIGN_OUT_SUCCESS});\r\n    }\r\n}\r\n\r\nfunction* handleSetRef(action){\r\n    const uid = yield select(getUid);\r\n    const db = yield call(getDatabase);\r\n    set(ref(db, '/persistedState/'+uid+\"/\"+action.endpoint))\r\n\r\n}\r\n\r\nfunction* fbaseRootSaga() {\r\n    yield all([\r\n        takeLeading(types.FBASE_INIT, initializeFirebase),\r\n        takeLatest(types.FBASE_AUTHENTICATE, authenticateFirebase),\r\n        takeLeading(types.FBASE_SIGN_OUT, logout),\r\n    ])\r\n};\r\n\r\nconst getUid = (state) => state.fbase.uid;\r\n\r\nexport default fbaseRootSaga;","// src/api/spotifyUtil.js\r\n\r\nconst baseUrl = \"https://api.spotify.com/v1\";\r\n\r\nconst requestTypes = {\r\n    GET: \"GET\",\r\n    POST: \"POST\",\r\n    PUT: \"PUT\",\r\n    DELETE: \"DELETE\"\r\n}\r\n\r\nfunction handleHttpResponse(response){\r\n    return response.json().then(\r\n        (json) => {\r\n            if(!response.ok) {\r\n                let startObj = (response.status === 429) ? {retry_after: response.headers.get('retry-after')} : {};\r\n                const error = Object.assign(startObj, json, {\r\n                    status: response.status,\r\n                    statusText: response.statusText\r\n                });\r\n\r\n                return Promise.reject(error);\r\n            }\r\n            return json;\r\n        });\r\n}\r\n\r\nconst spotifyApiCall = (token, endpoint, method=\"GET\", bodyObj={}, content_type=\"application/json\") => {\r\n    // add slash if missing\r\n    const finalEndpoint = (endpoint.startsWith(\"/\")) ? endpoint : \"/\" + endpoint;\r\n    // embed token\r\n    const headers = {\r\n        'Authorization': ('Bearer ' + token),\r\n    }\r\n    const parameters = {\r\n        method: method,\r\n        headers: headers\r\n    }\r\n    // add the body object to the parameters if it isn't empty\r\n    if(Object.keys(bodyObj).length !== 0){\r\n        parameters[\"body\"] = JSON.stringify(bodyObj);\r\n        headers[\"Content-Type\"] = content_type;\r\n    }\r\n    \r\n    return fetch(baseUrl+finalEndpoint, parameters).then(handleHttpResponse).then(response => ({response}) ).catch(error => ({error}) );\r\n}\r\n\r\nexport { baseUrl, requestTypes, spotifyApiCall };","import { spotifyApiCall } from './spotifyUtil';\n\n\nconst getSearchResults = (token, searchQuery, searchTypes, pageInfo=\"&offset=0&limit=20\") => {\n    const baseEndpoint = '/search';\n    const typesListString = searchTypes.reduce((tot,type,i,arr) => {\n        if (arr.length-1!==i){\n            return (tot + type + ',');\n        }else return (tot + type);\n    });\n    const queryEndpoint = '?q=' + encodeURIComponent(searchQuery) + '&type=' + encodeURIComponent(typesListString) + \"&market=from_token\";\n    \n    return spotifyApiCall(token, baseEndpoint + queryEndpoint + pageInfo);\n}\n\n\nexport { getSearchResults };","// src/state/search/searchSagas.js\r\nimport { call, select, all, put, takeLatest } from 'redux-saga/effects';\r\nimport * as types from './searchTypes';\r\nimport { getSearchResults } from \"../../api/spotifySearch\";\r\nimport { baseUrl, spotifyApiCall } from \"../../api/spotifyUtil\";\r\n\r\nfunction* getSearch(action){\r\n    const resultTypes = yield select(getResultTypes);\r\n    const {response, error} = yield call(getSearchResults, action.token, action.query, resultTypes);\r\n    if (error){\r\n        //Fetching API failed\r\n        yield put({'type': types.SEARCH_GET_ERROR, payload: error.error});\r\n    }else{\r\n        const data = response.tracks;\r\n        yield put({'type': types.SEARCH_GET_SUCCESS, payload: data});\r\n    }\r\n\r\n}\r\n\r\nfunction* getNextPage(action){\r\n    const nextPage = yield select(getNextPageURL);\r\n    if(nextPage){\r\n        const endpoint = nextPage.slice(baseUrl.length);\r\n        const {response, error} = yield call(spotifyApiCall, action.token, endpoint);\r\n        if(error){\r\n            yield put({'type': types.SEARCH_GET_ERROR, payload: error.error});\r\n        }else{\r\n            const data = response.tracks;\r\n            yield put({'type': types.SEARCH_GET_SUCCESS, payload: data});\r\n        }\r\n    }\r\n}\r\n\r\nfunction* getPrevPage(action){\r\n    const prevPage = yield select(getPrevPageURL);\r\n    if(prevPage){\r\n        const endpoint = prevPage.slice(baseUrl.length);\r\n        const {response, error} = yield call(spotifyApiCall, action.token, endpoint);\r\n        if(error){\r\n            yield put({'type': types.SEARCH_GET_ERROR, payload: error.error});\r\n        }else{\r\n            const data = response.tracks;\r\n            yield put({'type': types.SEARCH_GET_SUCCESS, payload: data});\r\n        }\r\n    }\r\n}\r\n\r\nfunction* searchRootSaga() {\r\n    yield all([\r\n        takeLatest(types.SEARCH_GET, getSearch),\r\n        takeLatest(types.SEARCH_NEXT, getNextPage),\r\n        takeLatest(types.SEARCH_PREV, getPrevPage)\r\n\r\n    ])\r\n};\r\n\r\nconst getResultTypes = (state) => state.search.resultTypes;\r\nconst getNextPageURL = (state) => state.search.activePage.next;\r\nconst getPrevPageURL = (state) => state.search.activePage.previous;\r\n\r\nexport default searchRootSaga;","// src/api/spotifyUser.js\r\nimport { spotifyApiCall } from './spotifyUtil';\r\n\r\nconst getCurrentUser = (token) => {\r\n    return spotifyApiCall(token, '/me');\r\n}\r\n\r\nexport { getCurrentUser };","// src/state/user/userSagas.js\r\nimport { all, call, put, takeLatest } from 'redux-saga/effects';\r\nimport * as types from './userTypes';\r\nimport * as fbaseTypes from '../fbase/fbaseTypes';\r\nimport { getCurrentUser } from \"../../api/spotifyUser\";\r\n\r\nfunction* getUser(action){\r\n    const { response, error } = yield call(getCurrentUser, action.token);\r\n    if(error){\r\n        // fetching the user from the API failed\r\n        yield put({'type': fbaseTypes.FBASE_SIGN_OUT});\r\n        yield put({'type': types.USER_GET_ERROR, payload: error.error})\r\n    }else{\r\n        // fetching the user from the API succeeded\r\n        const data = response;\r\n        const user = {\r\n            id: data.id,\r\n            display_name: data.display_name,\r\n            country: data.country\r\n        }\r\n        yield put({'type': types.USER_GET_SUCCESS, payload: user});\r\n    }\r\n}\r\n\r\nfunction* userRootSaga() {\r\n    yield all([\r\n        takeLatest(types.USER_GET, getUser)\r\n    ])\r\n};\r\n\r\nexport default userRootSaga;","// src/state/playlist/playlistActions.js\nimport { createAction } from '../utils';\nimport * as types from './playlistTypes';\n\nconst actions = {\n    moveUpSong: (token, playlistId, CI, snapshot_id) => createAction(types.PLAYLIST_MOVE_UP_SONG, {token, playlistId, CI, snapshot_id}),\n    moveDownSong: (token, playlistId, CI, snapshot_id) => createAction(types.PLAYLIST_MOVE_DOWN_SONG, {token, playlistId, CI, snapshot_id}),\n    deleteFromList: ( token, playlistId, track_uri, snapshot_id, CI, trackId ) => createAction(types.PLAYLIST_DELETE_FROM_LIST, { token, playlistId, track_uri, snapshot_id, CI, trackId}),\n    fetchPlaylists: (token) => createAction(types.PLAYLIST_GET, {token}), \n    fetchTrack: (token, playlistId) => createAction(types.PLAYLIST_TRACK_GET, {token, playlistId}),\n    selectPlaylist: (playlistId) => createAction(types.PLAYLIST_SELECT, {playlistId})\n};\n\nexport default actions;","// src/api/spotifyPlaylist.js\nimport { spotifyApiCall, requestTypes } from './spotifyUtil';\n\nconst fetchPlaylist = (token, offset) => {\n    return spotifyApiCall(token, '/me/playlists?offset='+offset+\"&limit=50\");\n}\n\nconst fetchTrack = (token, playlist_id, offset) => {\n    return spotifyApiCall(token, '/playlists/' + playlist_id + '/tracks?market=from_token&offset='+offset+'&limit=100');\n}\n\nconst moveTrack = (token, playlist_id, range_start, insert_before, snapshot_id) => {\n    return spotifyApiCall(token, '/playlists/' + playlist_id + '/tracks', requestTypes.PUT, {range_start,insert_before,snapshot_id});\n}\n\nconst deleteFromPlaylist = (token, playlist_id, tracks, snapshot_id) => {\n    return spotifyApiCall(token, '/playlists/' + playlist_id + '/tracks', requestTypes.DELETE, {tracks, snapshot_id})\n}\n\nexport { moveTrack, deleteFromPlaylist, fetchPlaylist, fetchTrack };","// src/state/playlist/playlistSagas.js\r\nimport { buffers } from 'redux-saga';\r\nimport { delay, all, put, take, takeLatest, takeEvery, takeLeading, call,select, actionChannel, fork } from 'redux-saga/effects';\r\nimport * as types from './playlistTypes';\r\nimport * as tracksTypes from '../tracks/tracksTypes';\r\nimport * as fbaseTypes from '../fbase/fbaseTypes';\r\nimport action from './playlistActions';\r\nimport { moveTrack, deleteFromPlaylist, fetchPlaylist,fetchTrack } from '../../api/spotifyPlaylist'\r\n\r\n\r\nconst getToken = (state) => state.auth.spotify.token;\r\n\r\nfunction* handleMoveUp(action){\r\n    const token = yield select(getToken);\r\n    const playlistId = action.playlistId;\r\n    const range_start = action.CI;\r\n    const insert_before = action.CI-1;\r\n    const snapshot_id = action.snapshot_id;\r\n    const { response, error } = yield call(moveTrack, token, playlistId, range_start, insert_before, snapshot_id);\r\n    console.log(response);\r\n    //console.log(error);\r\n    //console.log(action.CI)\r\n    if(!error){      \r\n        yield put({'type': types.PLAYLIST_MOVE_UP_SONG_SUCCESS, payload: {CI: action.CI, snapshot_id: response.snapshot_id}});\r\n    }else{\r\n        yield put({'type': types.PLAYLIST_MOVE_UP_SONG_ERROR, payload: error.error});\r\n    }\r\n}\r\n\r\nfunction* handleMoveDown(action){\r\n    const token = yield select(getToken);\r\n    const playlistId = action.playlistId;\r\n    const range_start = action.CI+1;\r\n    const insert_before = action.CI;\r\n    const snapshot_id = action.snapshot_id;\r\n    const { response, error } = yield call(moveTrack, token, playlistId, range_start, insert_before, snapshot_id);\r\n    if(!error){\r\n        yield put({'type': types.PLAYLIST_MOVE_DOWN_SONG_SUCCESS, payload: {CI: action.CI, snapshot_id: response.snapshot_id}});\r\n    }else{\r\n        yield put({'type': types.PLAYLIST_MOVE_DOWN_SONG_ERROR, payload: error.error});\r\n    }\r\n}\r\n\r\nfunction* handleDeleteFromPlaylist(action){\r\n    const token = yield select(getToken);\r\n    const playlistId = action.playlistId;\r\n    const snapshot_id = action.snapshot_id;\r\n    const trackId = action.trackId;\r\n    const tracks = [{\"uri\": action.track_uri, \"positions\": [action.CI]}];\r\n    const { response, error } = yield call(deleteFromPlaylist, token, playlistId, tracks, snapshot_id);\r\n\r\n    if(!error){\r\n        yield put({'type': tracksTypes.TRACKS_DELETE_LOCATIONS, payload: {playlistId, trackId}});\r\n        yield put({'type': types.PLAYLIST_DELETE_FROM_LIST_SUCCESS, payload: {CI: action.CI, snapshot_id: response.snapshot_id}});\r\n    }else{\r\n        yield put({'type': types.PLAYLIST_DELETE_FROM_LIST_ERROR, payload: error.error});\r\n    }\r\n}\r\n\r\nfunction* handleFetchPlaylist(action){\r\n    const token = yield select(getToken);\r\n    let offset = 0;\r\n    let response, error;\r\n    ({ response, error } = yield call(fetchPlaylist, token, offset));\r\n    if(error){\r\n        if(error.status === 401){\r\n            yield put({'type': fbaseTypes.FBASE_SIGN_OUT});\r\n        }\r\n    }else{\r\n        let total = response.total;\r\n        let remainingPlaylists = (total > 50);\r\n        let allPlaylists = response.items;\r\n        while(remainingPlaylists && !error){\r\n            offset += 20;\r\n            ({ response, error } = yield call(fetchPlaylist, token, offset));\r\n            if(!error){\r\n                allPlaylists = allPlaylists.concat(response.items);\r\n            }else if(error.status === 429){\r\n                offset -= 50;\r\n                yield delay(1000*error.retry_after);\r\n            }\r\n            remainingPlaylists = (total > offset+50);\r\n        }\r\n        if(!error){\r\n            yield put({'type': types.PLAYLIST_GET_SUCCESS, payload: {playlists: allPlaylists}});\r\n        }else{\r\n            yield put({'type': types.PLAYLIST_GET_ERROR, payload: error.error});\r\n        }\r\n    }\r\n}\r\n\r\nfunction* handleFetchTrack(action){\r\n    const token = yield select(getToken);\r\n    const playlist_id = action.playlistId;\r\n    let offset = 0;\r\n    let response, error;\r\n    ({ response, error } = yield call(fetchTrack, token, playlist_id, offset));\r\n    if(error){\r\n        console.log(error)\r\n    }else{\r\n        let total = response.total;\r\n        let remainingTracks = (total > 100);\r\n        let allTracks = response.items;\r\n        while(remainingTracks && ! error){\r\n            offset += 100;\r\n            ({ response, error } = yield call(fetchTrack, token, playlist_id, offset));\r\n            if(!error){\r\n                allTracks = allTracks.concat(response.items);\r\n            }else if(error.status === 429){\r\n                offset -= 100;\r\n                yield delay(1000*error.retry_after);\r\n            }else{\r\n                console.error(error);\r\n            }\r\n            remainingTracks = (total > offset+100);\r\n        }\r\n        if(!error){\r\n            let tracks = allTracks.filter(wt => (!wt.is_local)).map(wrappedTrack => {\r\n                let track = wrappedTrack.track;\r\n                return {\r\n                    album_name: track.album.name,\r\n                    album_image: (track.album.images.length >= 2 && track.album.images[1]) || null,\r\n                    artists: track.artists.map(a=>a.name),\r\n                    is_local: track.is_local,\r\n                    external_urls: track.external_urls,\r\n                    name: track.name,\r\n                    id: track.id,\r\n                    preview_url: track.preview_url,\r\n                    uri: track.uri,\r\n                    duration: track.duration_ms\r\n                };\r\n            });\r\n            let trackIds = response.items.map(wrappedTrack => wrappedTrack.track.id);\r\n            yield put({'type':types.PLAYLIST_TRACK_GET_SUCCESS, payload: {playlist_id, tracks: tracks}})\r\n            yield put({'type':tracksTypes.TRACKS_SAVE_LOCATIONS, payload: {playlist_id, trackIds: trackIds}})\r\n        }else{\r\n            yield put({'type': types.PLAYLIST_TRACK_GET_ERROR, payload: error.error});\r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction* watchTracksFetch(){\r\n    const buffer = buffers.expanding(10);\r\n    const trackFetchChannel = yield actionChannel(types.PLAYLIST_TRACK_GET, buffer);\r\n    let firstHandled = false;\r\n    while(!firstHandled || !buffer.isEmpty()){\r\n        const action = yield take(trackFetchChannel);\r\n        yield call(handleFetchTrack, action);\r\n        firstHandled=true;\r\n    }\r\n    yield put({'type': types.PLAYLIST_TRACK_GET_ALL_DONE});\r\n}\r\n\r\n\r\nfunction* playlistRootSaga() {\r\n    yield all([\r\n        takeEvery(types.PLAYLIST_MOVE_UP_SONG, handleMoveUp),\r\n        takeEvery(types.PLAYLIST_MOVE_DOWN_SONG, handleMoveDown),\r\n        takeLeading(types.PLAYLIST_DELETE_FROM_LIST, handleDeleteFromPlaylist),\r\n        takeLeading(types.PLAYLIST_GET,handleFetchPlaylist),\r\n        fork(watchTracksFetch),\r\n    ])\r\n};\r\n\r\nexport default playlistRootSaga;\r\n","// src/state/tracks/tracksActions.js\nimport { createAction } from '../utils';\nimport * as types from './tracksTypes';\n\nconst actions = {\n    deleteFromList: ( playlistId) => createAction(types.TRACKS_DELETE_LOCATIONS, {playlistId}),\n    addToTracks: (trackId) => createAction(types.PLAYLIST_ADD_TO_TRACKS, {trackId}),\n};\n\nexport default actions;","// src/state/playlist/playlistSagas.js\r\nimport { all, put, takeEvery, takeLeading, call,select } from 'redux-saga/effects';\r\nimport * as types from './tracksTypes'\r\nimport action from './tracksActions';\r\n\r\nfunction* tracksRootSaga(playlistChannel) {\r\n    yield all([\r\n    ])\r\n};\r\n\r\nexport default tracksRootSaga;\r\n","// src/state/rootReducer.js\r\nimport { call, fork } from 'redux-saga/effects';\r\nimport { channel } from 'redux-saga';\r\nimport auth from './auth/authSagas';\r\nimport fbase from './fbase/fbaseSagas';\r\nimport search from './search/searchSagas';\r\nimport user from './user/userSagas';\r\nimport lists from './playlist/playlistSagas';\r\nimport track from './tracks/tracksSagas';\r\n\r\nexport default function* rootSaga() {\r\n    const mutualChannel = yield call(channel);\r\n    yield fork(auth);\r\n    yield fork(fbase);\r\n    yield fork(search);\r\n    yield fork(user);\r\n    yield fork(lists);\r\n    yield fork(track);\r\n    // yield fork(module);\r\n}","// src/state/store.js\r\n\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from './rootReducer';\r\nimport rootSaga from './rootSaga';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nconst reduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = (process.env.NODE_ENV !== 'production') ? \r\n    createStore(rootReducer, compose(applyMiddleware(sagaMiddleware), reduxDevTools))       // development mode\r\n    : createStore(rootReducer, applyMiddleware(sagaMiddleware));                            // production mode (should not require Redux devtools extension)\r\n\r\nexport default store;\r\n\r\nsagaMiddleware.run(rootSaga);","export default __webpack_public_path__ + \"static/media/LOGO.846060d1.svg\";","// src/state/search/searchActions.js\r\nimport { createAction } from '../utils';\r\nimport * as types from './searchTypes';\r\n\r\nconst actions = {\r\n    initSearch: () => createAction(types.SEARCH_INIT_TEST),\r\n    getSearchResults: (token, query) => createAction(types.SEARCH_GET, {token, query}),\r\n    getNextPage: (token) => createAction(types.SEARCH_NEXT, {token}),\r\n    getPreviousPage: (token) => createAction(types.SEARCH_PREV, {token}),\r\n};\r\nexport default actions;","export default __webpack_public_path__ + \"static/media/Search.8d2bd43b.svg\";","// src/views/SearchView.js\r\nimport './SearchView.scss';\r\nimport Form from 'react-bootstrap/Form';\r\nimport LOGO from '../images/LOGO.svg';\r\nimport searchicon from '../images/Icons/Search.svg';\r\n// import icons from '/node_modules/bootstrap-icons/icons'\r\nimport React from 'react'\r\n\r\nfunction SearchView(props){\r\n    return (\r\n        <div className=\"searchview\">\r\n            <img\r\n                alt=\"\"\r\n                src={LOGO}\r\n                className=\"bg\"\r\n            />{' '}\r\n\r\n            <div className= 'searchcontainer'>\r\n                <h6>Listify helps you manage and find inspiration for your playlists</h6>\r\n                <div className='s-searchbar'>\r\n                    <form className='s-searchinput'>\r\n                        <Form.Group controlId=\"formSearchInput\">\r\n                            <Form.Control autoFocus={props.tabVisible} type=\"text\" placeholder=\"Search for a song, an artist, or an album...\" onChange={e=>props.onSearch(e.target.value)}/> \r\n                        </Form.Group>\r\n                    </form>\r\n                    <img\r\n                            \r\n                        alt=\"\"\r\n                        src= {searchicon}       \r\n                        />{' '}\r\n                </div>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n  );\r\n}\r\n\r\nexport default SearchView;","export default __webpack_public_path__ + \"static/media/Spotify_Icon.cd66b8f6.png\";","export default __webpack_public_path__ + \"static/media/Inboxes fill.043f2be9.svg\";","// src/views/SearchResultView.js\r\nimport './SearchResultView.scss';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport Card from 'react-bootstrap/Card';\r\nimport spotifyicon from '../images/Icons/Spotify_Icon.png';\r\nimport searchicon from '../images/Icons/Search.svg';\r\nimport trackmarked from '../images/Icons/Inboxes fill.svg';\r\nimport untrackmark from '../images/Icons/Inboxes.png';\r\n\r\n\r\n\r\nfunction SearchResultView(props){\r\n    return (\r\n        <div className= 'searchresultview'>\r\n            <div className= 'searchresultcontainer'>\r\n                <div className='sr-searchbar'>\r\n                    <form className='sr-searchinput'>\r\n                        <Form.Group controlId=\"formSearchInput\">\r\n                            <Form.Control autoFocus={props.tabVisible} defaultValue={props.search} \r\n                                    type=\"text\" placeholder=\"Search for a song, an artist or an album\"\r\n                                    onChange={e=>props.onSearch(e.target.value)} />\r\n                       </Form.Group>\r\n                    </form>\r\n                        <img\r\n                                alt=\"search icon\"\r\n                                src= {searchicon}\r\n                            />\r\n                </div>\r\n                <Table size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                            <th class='th-index'> </th>\r\n                            <th class='th-songname text-muted'>Name </th>\r\n                            <th class='th-songartist text-muted'>Artist</th>\r\n                            <th class='th-songalbum text-muted'>Album</th>\r\n                            <th class='th-actions text-muted'>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                </Table>\r\n                {/* Here needs to fetch searchresults data */}\r\n                <div className='resultscontainer'>\r\n\r\n                   { props.results.map((item, index) => {\r\n                       return (\r\n                        <div className='songitem' key={index}>  \r\n                            <span className=\"cd-preview fake-button\" onClick={()=>console.log(index)}>\r\n                                <i class=\"fas fa-play-circle\"></i>\r\n                            </span>\r\n                            <div className='cd-cover'>  \r\n                                {/* <h6>{(props.currentPage-1)*20 + index+1}</h6> */}\r\n                                <img\r\n                                    alt=\"song album cover\"\r\n                                    className=\"songitem-cover\"\r\n                                    src={item.image} \r\n                                    />\r\n                            </div>\r\n                            <Card>\r\n                               <div className='cardcontent'>\r\n                                   <p className=\"cd-name text-muted\">\r\n                                   {item.track}\r\n                                   </p>\r\n                                   <p className=\"cd-artist text-muted\">\r\n                                   <i class=\"fas fa-user\"></i>\r\n                                   {item.artist}\r\n                                   </p>\r\n                                   <p className=\"cd-album text-muted\">\r\n                                   <i class=\"fas fa-record-vinyl\"></i>\r\n                                   {item.album}\r\n                                   </p>\r\n                                   {/* These functions have not been implemented yet */}\r\n                                   <div className='cd-Actions' > \r\n                                       <Button variant=\"light\" onClick={()=>console.log(index)}>\r\n                                           {/* <Button onClick={()=>props.addToStash(index)}> */}\r\n                                           {/* If it is not clicked */}\r\n                                           {/* <img\r\n                                            alt=\"add to track stash\"\r\n                                            src={untrackmark}\r\n                                           /> */}\r\n                                           {/* If it is clicked */}\r\n                                           <img\r\n                                                alt=\"remove from track stash\"\r\n                                                src={trackmarked} />\r\n                                       </Button>\r\n                                       \r\n                                       <a href={item.spotifyUrl}>\r\n                                           {/* Open Spotify */}\r\n                                            <img\r\n                                                alt=\"open song in Spotify\"\r\n                                                src={spotifyicon}\r\n                                                className='openinspotify'\r\n                                                />\r\n                                        </a>\r\n                                       {/* <i className=\"fa fa-plus add-song\" aria-hidden=\"true\" /> */}\r\n                                    </div>\r\n                               </div>\r\n                       </Card>\r\n                       </div>\r\n                       )\r\n                    })}\r\n                        \r\n\r\n                    {/* Here needs to get the number of pages */}\r\n                    <div className=\"Pagenav\">\r\n                        <nav>\r\n                            <ul class=\"pagination\">\r\n                                <li class={(props.currentPage===1) ? \"page-item disabled\" : \"page-item\"}>\r\n                                <span class=\"page-link\" aria-label=\"Previous\" onClick={props.onPrevPage} disabled={props.currentPage===1}>\r\n                                    <span aria-hidden=\"true\"></span>\r\n                                    <span class=\"sr-only\">Previous</span>\r\n                                    Previous\r\n                                </span>\r\n                                </li>\r\n                              \r\n                                <li class={(props.currentPage===props.numPages) ? \"page-item disabled\" : \"page-item\"}>\r\n                                <span class=\"page-link\" aria-label=\"Next\" onClick={props.onNextPage} disabled={props.currentPage===props.numPages}>\r\n                                    <span aria-hidden=\"true\"></span>\r\n                                    <span class=\"sr-only\">Next</span>\r\n                                    Next\r\n                                </span>\r\n                                </li>\r\n                            </ul>\r\n                            <p>Page {props.currentPage} out of {props.numPages}</p>\r\n                        </nav>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* smtracks here */}\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default SearchResultView;\r\n\r\n//small tracksview has not been implemented\r\n            /*\r\n            <div className= 'smtrackscontainer'>\r\n                <div className=\"trackstitle\"> \r\n                    <h5>\r\n                        Tracks\r\n                    </h5>\r\n                    <img\r\n                            alt=\"\"\r\n                            src= {trackmarked}\r\n                            width ='24px'\r\n                            height='24px'\r\n\r\n                        />\r\n                </div>\r\n                <Table size=\"sm\" borderless='1' >\r\n                        <thead class=\"text-light\">\r\n                            <tr>\r\n                            <th><em>Cover </em></th>\r\n                            <th>Details</th>\r\n                            <th>Mark</th>\r\n                            </tr>\r\n                        </thead>\r\n                </Table>\r\n                // Here needs to fetch data from tracks //\r\n                <div className='resulttable'>\r\n                    <div className='tracksitem' style={{background:'orange'}}>\r\n                        <img\r\n                            src={songcover}\r\n                             />\r\n                        <Card style={{ width: '80%' , borderColor:'transparent', background:'orange', display:'flex', justifyContent:\"space-evenly\"}}>\r\n                                <div className='cardcontent'>\r\n                                    // <p><small>The weekend</small></p> //\r\n                                    <p><small>Blinding Lights</small></p>\r\n                                    <p><small>After Hours</small></p>                        \r\n                                    <Button class=\"btn-sm btn-transparent\">\r\n                                        <img\r\n                                            src={trackmarked}\r\n                                            width= '18px'\r\n                                            height='18px'\r\n                                             />\r\n                                    </Button>\r\n                                </div>\r\n                        </Card>\r\n                    </div>\r\n                    <div className='tracksitem'style={{background:'white'}}>\r\n                        <img\r\n                            src={songcover}\r\n                            width= '72px'\r\n                            height='72px' />\r\n                        <Card style={{ width: '80%' , background:'white'}}>\r\n                            <Card.Body>\r\n                                <div className='cardcontent'>\r\n                                    <Card.Text className=\"sm text-muted\">\r\n                                    The weekend\r\n                                    </Card.Text>\r\n                                    <Card.Text className=\"sm text-muted\">\r\n                                    Blinding Lights\r\n                                    </Card.Text>\r\n                                    <Card.Text className=\"sm text-muted\">\r\n                                    After Hours\r\n                                    </Card.Text>\r\n                                    <Button>\r\n                                        <img\r\n                                            src={trackmarked}\r\n                                            width= '18px'\r\n                                            height='18px' />\r\n                                    </Button>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                   \r\n                </div>\r\n            </div> */\r\n","import React from \"react\";\nimport {useState, useEffect} from \"react\";\nimport { connect } from 'react-redux';\nimport searchActions from '../state/search/searchActions';\nimport SearchView from '../views/SearchView';\nimport SearchResultView from '../views/SearchResultView';\n\nfunction setNextPage(currentPage, numPages, setPage){\n    if(currentPage === numPages) return;\n    setPage(currentPage+1);\n}\nfunction setPrevPage(currentPage, setPage){\n    if(currentPage === 0) return;\n    setPage(currentPage-1);\n}\n\nfunction SearchPresenter(props) {\n    const [search, setSearch] = useState(\"\");\n    const { token } = props;\n\n    useEffect(() =>{\n        if (!search) return;\n        props.getSearchResults(token, search);\n    }, [search])\n\n    const [isTabVisible, setIsTabVisible] = useState(false);\n    useEffect(()=>{\n        const observer = new MutationObserver(() =>{\n            let searchTab = document.querySelector('#left-tabs-example-tab-search');\n            setIsTabVisible( (searchTab && searchTab.classList.contains(\"active\")) );\n        })\n        let searchTab = document.querySelector('#left-tabs-example-tab-search');\n        observer.observe(searchTab, {\n            attributes: true\n            \n        });\n        return () => observer.disconnect(searchTab);\n    }, []);\n\n    useEffect(()=>{\n        if(isTabVisible){\n            const searchBar = document.getElementById(\"formSearchInput\");\n            searchBar.focus();\n        }\n    }, [isTabVisible]);\n\n    const [page, setPage] = useState(1);\n    const numPages = Math.ceil(props.totalResults/20);\n   \n    \n    return (search) ?\n        <SearchResultView   onSearch={(term)=>setSearch(term)} search={search}\n                            results={props.results} currentPage={page}\n                            numPages={numPages}\n                            onNextPage={() => {\n                                setNextPage(page, numPages, setPage);\n                                props.getNextPage(token);\n                            }}\n                            onPrevPage={() => {\n                                setPrevPage(page, setPage);\n                                props.getPreviousPage(token);\n                            }}\n                            tabVisible={isTabVisible}\n        /> : \n        <SearchView onSearch={(term)=>setSearch(term)} tabVisible={isTabVisible} />\n\n}\n\nconst mapStateToProps = (state) => { \n    let totalResults = (state.search.activePage && state.search.activePage.total) || 0; \n    let itemsArray = [];\n    if(state.search.activePage){\n        itemsArray = state.search.activePage.items.map( (item) => {\n            let artistString = item.artists.reduce((tot,artist,i,arr) => {\n                if (arr.length-1!==i){\n                    return (tot + artist.name + ', ');\n                }else return (tot + artist.name);\n            }, \"\");\n            let smallestAlbumImage = item.album.images.reduce(\n                (smallest, image) => {\n                    if (image.height < smallest.height) return image\n                    return smallest\n                }, \n                item.album.images[0]\n            );\n            let trackMinutes = Math.floor((item.duration_ms/1000)/60);\n            let trackSeconds = Math.round((item.duration_ms - trackMinutes * 1000 * 60)/1000);\n            return {\n                artist: artistString,\n                album: item.album.name,\n                track: item.name,\n                spotifyUrl: item.external_urls.spotify,\n                image: smallestAlbumImage.url,\n                duration: trackMinutes + \":\" + trackSeconds,\n                previewSong: item.preview_url\n            }\n        })\n    }\n    return {\n        totalResults: totalResults,\n        results: itemsArray,\n        token: state.auth.spotify.token\n    };\n}\n  \nconst mapDispatchToProps = {\n    getSearchResults: searchActions.getSearchResults,\n    getNextPage: searchActions.getNextPage,\n    getPreviousPage: searchActions.getPreviousPage\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPresenter);\n","// src/views/PlaylistView.js\nimport './PlaylistView.scss';\nimport Table from 'react-bootstrap/Table'\nimport Card from 'react-bootstrap/Card'\nimport trackmarkicon from '../images/Icons/Inboxes fill.svg'\nimport nottrackedicon from '../images/Icons/Inboxes.png'\nimport LOGO from '../images/LOGO.svg';\n// import icons from '/node_modules/bootstrap-icons/icons'\nimport React from 'react'\nimport { ButtonGroup, NavItem } from 'react-bootstrap';\n\n\nfunction PlaylistView(props){\n    return (\n    \n        <div className=\"playlistview\">\n            {/* Playlist navigation (selected/unselected)*/}\n            <div className=\"playlistsnav\"> \n                {/* \n                {props.playlists.map((playlistlabel)=> {\n                    (playlistlabel.selected)? \n                    <div className=\"unselectedplaylist\">\n\n                    </div> :\n                    <div className=\"selectedplaylist>\n                    </div>\n\n\n                })} */}\n\n                {props.allPlaylists.map((playlist,i) => {\n                    return (\n                        <div key={i} className={(\n                            (props.selectedPlaylist && props.selectedPlaylist === playlist.id) || (!props.selectedPlaylist && i === 0)) ?\n                                'selectedplaylist': \"unselectedplaylist\"} \n                                onClick = {() => props.onSelectPlaylist(playlist.id)}\n                        >\n                            <img className={(playlist.image) ? \"\" : \"no-img\"} alt=\"playlists\" src={(playlist.image)?playlist.image.url: LOGO}></img>\n                            <p class=\"h6 text-light\">{playlist.name}</p>\n                        </div>\n                    )\n                })}\n                \n                {/* <div className=\"unselectedplaylist\">\n                    <img\n                        src=\"https://upload.wikimedia.org/wikipedia/en/thumb/c/c1/The_Weeknd_-_After_Hours.png/220px-The_Weeknd_-_After_Hours.png\"\n                        >\n                    </img>\n                    <p className=\"h6 text-secondary\">Playlist B</p>\n                </div> */}\n\n            </div>\n            {/* Playlist content (selected)*/}\n            {/* display the content of selected playlist\n                  {props.playlists.map((playlistlabel)=> {\n                    (playlistlabel.selected)? \n                     :\n                    <div className=\"selectedplaylist>\n                    </div>\n\n\n                })}   \n                */}\n            <div className=\"playlistcontent\">\n                <div className=\"playlistbanner\">\n                    <img alt=\"selected playlist\" className={(props.playlist.image) ? \"\" : \"no-img\"} src={(props.playlist.image)?props.playlist.image.url: LOGO} />\n                    <div className=\"playlistinfo\">\n                        <div className=\" h4 text-light\">{props.playlist.name}</div>\n                        <p className=\" md text-light\">{props.playlist.description}</p>\n                    \n                        <form className=\"actionsbar\">\n                            <div class= \"form-group\">\n                                <input type=\"email\" class=\"form-control\" id=\"PlaylistSearchAction\" placeholder=\"search for a song\"  defaultValue={props.searchTerm} onChange={e=>props.onSearchTerm(e.target.value)}/>\n                            </div>\n                            <div className=\"form-group\">\n                                {/* <label for=\"exampleFormControlSelect1\">Sort</label> */}\n                                <select class=\"form-control\" id=\"PlaylistSortAction\" placeholder=\"Sort\">\n                                <option>song</option>\n                                <option>artist</option>\n                                <option>album</option>\n                                </select>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n\n                <Table className=\"p-tabletitle\" size=\"sm\" >\n                    <thead>\n                        <tr>\n                        <th>#</th>\n                        <th>Actions</th>\n                        </tr>\n                    </thead>\n                </Table>\n                <div className='songscontainer'>\n                    {props.tracks.map((track, index)=> {\n                        return (\n                            <div key={index} className='p-songitem'>\n                                <h6>{index+1}</h6>\n                                <img className=\"p-songcover\"\n                                    alt=\"song album cover\"\n                                    src={(track.image) ? track.image.url : LOGO}\n                                    width= '48px'\n                                    height= '48px'\n                                    />\n                            <Card borderless='1'>\n                                    <div className=\"p-cardbody\">\n                                            <div className='p-cardcontent'>\n                                                <div className=\"p-songname\">\n                                                    {track.name}\n                                                </div>\n                                                <div className=\"p-songartist\">\n                                                    <i className=\"fas fa-user\"></i>\n                                                    {track.artist}\n                                                </div>\n                                                <div className=\"p-songalbum\">\n                                                    <i className=\"fas fa-record-vinyl\"></i>\n                                                    {track.album_name}\n                                                </div>\n                                            </div>\n                                            <div className=\"p-actions\">\n                                                <button className=\"trackmarked\"  onClick={()=>props.onAddToTracks(index)}>\n                                                    {/* if added in tracks  */}\n                                                    <img\n                                                        alt=\"add to track stash\"\n                                                        src={trackmarkicon}\n                                                        />\n                                                </button>\n                                                {/* : <button className=\"nottrackmarked\" >\n                                                    <img\n                                                        src={nottrackedicon}\n                                                        />\n                                                </button>\n                                                */}\n                                                <ButtonGroup>\n                                                <button disabled={!props.actionsDisabled} onClick={()=> props.onMoveUpSong(index)}>\n                                                    <i class=\"far fa-arrow-alt-circle-up\"></i>\n                                                </button>\n                                                <button disabled={!props.actionsDisabled} onClick={()=> props.onMoveDownSong(index)}>\n                                                    <i class=\"far fa-arrow-alt-circle-down\"></i>\n                                                </button>\n                                                <button disabled={!props.actionsDisabled} onClick={()=> props.onDeleteSong(index)}>\n                                                    <i class=\"far fa-minus-square\"></i>\n                                                </button>\n                                                </ButtonGroup>\n                                            </div>\n                                    </div>\n                                </Card>\n                            </div>\n                        )\n                        \n                    })}\n                    \n                </div>\n            </div>\n        </div>\n    \n    );\n}\n\nexport default PlaylistView;","// src/views/LoadingView.js\r\nimport './LoadingView.scss';\r\n\r\nfunction LoadingView(props){\r\n    const { size } = props;\r\n    const sizeClass = (size === \"xs\") ? \"loading-view-xs\" : (\r\n        (size === \"sm\") ? \"loading-view-sm\" : (\r\n        (size === \"md\") ? \"loading-view-md\" : (\r\n        \"loading-view-lg\" // size === \"lg\" (default)\r\n    )));\r\n    return (\r\n        <div className={\"loading-view \" + sizeClass}>\r\n            <div className=\"lds-ring\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default LoadingView;","// src/presenters/PlaylistPresenter.js\r\nimport { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PlaylistView from '../views/PlaylistView';\r\nimport LoadingView from '../views/LoadingView';\r\nimport playlistActions from '../state/playlist/playlistActions';\r\nimport tracksActions from '../state/tracks/tracksActions';\r\nimport FuzzySearch from 'fuzzy-search';\r\n\r\nfunction PlaylistPresenter(props){\r\n    const { token, playlists, playlistsFetched, tracksFetched, playlist, playlistTracks, allPlaylists, selectedPlaylist  } = props;\r\n\r\n    useEffect(()=>{\r\n        props.fetchPlaylists(token);\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(playlistsFetched && Object.keys(playlists).length !== 0 && !tracksFetched){\r\n            Object.values(playlists).forEach(list => {\r\n                if(!list.tracks){\r\n                    props.fetchTracks(token, list.id);\r\n                }\r\n            });\r\n        }\r\n    },[playlistsFetched])\r\n    \r\n    const updateSelectedPlaylist = (playlistId) => props.selectPlaylist(playlistId);\r\n    const moveUpSong = (CI) => props.moveUpSong(token, playlist.id, CI, playlist.snapshot_id);\r\n    const moveDownSong = (CI) => props.moveDownSong(token, playlist.id, CI, playlist.snapshot_id);\r\n    const deleteFromList = (CI) => props.deleteFromList(token, playlist.id, playlistTracks[CI].uri, playlist.snapshot_id, CI, playlist.tracks[CI]); \r\n    const addToTracks = (CI) => props.addToTracks(playlist.tracks[CI]);\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState(playlistTracks);\r\n\r\n    useEffect(()=>{\r\n        if(searchTerm){\r\n            const searcher = new FuzzySearch(playlistTracks, ['name','artist','album_name'], {\r\n                caseSensitive: false,\r\n            })\r\n            setSearchResults(searcher.search(searchTerm));\r\n            console.log(searchResults);\r\n        }else if(playlistTracks){\r\n            setSearchResults(playlistTracks);\r\n        }\r\n\r\n    },[searchTerm, playlistTracks])\r\n\r\n\r\n\r\n    return (playlist && playlists && searchResults && allPlaylists && playlistTracks && tracksFetched) ? \r\n            <PlaylistView   onSelectPlaylist = {updateSelectedPlaylist} \r\n                            onMoveUpSong = {moveUpSong}\r\n                            onMoveDownSong = {moveDownSong}\r\n                            onDeleteSong = {deleteFromList}\r\n                            tracks = {searchResults}\r\n                            allPlaylists = {allPlaylists}\r\n                            playlist = {playlist}\r\n                            selectedPlaylist={selectedPlaylist}\r\n                            onAddToTracks={addToTracks}\r\n                            onSearchTerm={(term)=>setSearchTerm(term)}\r\n                            searchTerm={searchTerm}\r\n                            actionsDisabled={(searchTerm == false)}\r\n    /> : <LoadingView />\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let selectedPlaylistData = null;\r\n    let allPlaylists = null;\r\n    let playlistTracks = null;\r\n    if(state.lists.playlistsFetched){\r\n        // retrieve the focused playlist\r\n        if(state.lists.selectedList){\r\n            selectedPlaylistData = state.lists.playlists[state.lists.selectedList];\r\n        }\r\n        else{\r\n            selectedPlaylistData = Object.values(state.lists.playlists)[0];\r\n        }\r\n\r\n        // retrieve the tracks of the focused playlist\r\n        if(selectedPlaylistData.tracks){\r\n            playlistTracks = selectedPlaylistData.tracks.map(trackId => {\r\n                let trackObj = state.lists.trackIndex[trackId];\r\n                let artistString = trackObj.artists.reduce((tot,artist,i,arr) => {\r\n                    if (arr.length-1!==i){\r\n                        return (tot + artist + ', ');\r\n                    }else return (tot + artist);\r\n                }, \"\");\r\n\r\n                let trackMinutes = Math.floor((trackObj.duration/1000)/60);\r\n                let trackSeconds = Math.round((trackObj.duration - trackMinutes * 1000 * 60)/1000);\r\n\r\n                return {\r\n                    name: trackObj.name,\r\n                    album_name: trackObj.album_name,\r\n                    artist: artistString,\r\n                    spotifyUrl: trackObj.external_urls,\r\n                    duration: trackMinutes + \":\" + trackSeconds,\r\n                    previewSong: trackObj.preview_url,\r\n                    image: trackObj.album_image,\r\n                    uri: trackObj.uri\r\n                }\r\n            })\r\n        }\r\n\r\n        // create array containing relevant info about all playlists\r\n        //console.log(state.lists.playlists);\r\n        allPlaylists = Object.values(state.lists.playlists).map((playlist) => ({\r\n            name: playlist.name,\r\n            image: playlist.image,\r\n            id: playlist.id,\r\n        }))\r\n\r\n    }\r\n    return ({\r\n        token: state.auth.spotify.token,\r\n        selectedPlaylist: state.lists.selectedList,\r\n        playlists: state.lists.playlists,\r\n        playlist: selectedPlaylistData,\r\n        playlistsFetched: state.lists.playlistsFetched,\r\n        tracksFetched: state.lists.tracksFetched,\r\n        playlistTracks: playlistTracks,\r\n        allPlaylists: allPlaylists,\r\n    });\r\n}\r\n  \r\nconst mapDispatchToProps = {\r\n    fetchPlaylists: playlistActions.fetchPlaylists,\r\n    fetchTracks: playlistActions.fetchTrack,\r\n    selectPlaylist: playlistActions.selectPlaylist,\r\n    moveUpSong: playlistActions.moveUpSong,\r\n    moveDownSong: playlistActions.moveDownSong,\r\n    deleteFromList: playlistActions.deleteFromList,\r\n\r\n    addToTracks: tracksActions.addToTracks,\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaylistPresenter);","// src/views/AuthorizedView.js\r\nimport './AuthorizedView.scss';\r\nimport { Tab, Navbar } from \"react-bootstrap\";\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport LOGO from '../images/LOGO.svg';\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\nimport SearchPresenter from '../presenters/SearchPresenter';\r\nimport PlaylistPresenter from '../presenters/PlaylistPresenter';\r\n\r\n\r\n\r\nfunction AuthorizedView(props){\r\n    return (\r\n        <div className=\"authorized-view\">\r\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"playlist\">\r\n            <Nav className=\"navbar\">\r\n            <Nav variant=\"tabs\" className=\"mr-auto\" id=\"nav-container\">\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"playlist\">Playlist</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"search\">Search</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link eventKey=\"tracks\">Tracks</Nav.Link>\r\n                    </Nav.Item>\r\n            </Nav>\r\n            <Nav>\r\n                <NavDropdown title={props.username}>\r\n                    <NavDropdown.Item onClick={props.logout} eventKey=\"1\">Sign Out</NavDropdown.Item>\r\n                </NavDropdown>\r\n                <Navbar.Brand>\r\n                    <img id=\"listify-logo\" src={LOGO} alt=\"Logo\" height=\"30\" width=\"30\"/>\r\n                </Navbar.Brand>\r\n            </Nav>\r\n            </Nav>\r\n            <Tab.Content>\r\n                <Tab.Pane eventKey=\"search\">\r\n                    <SearchPresenter>\r\n                    </SearchPresenter> \r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"playlist\">\r\n                    <PlaylistPresenter>\r\n                    </PlaylistPresenter>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"tracks\">\r\n                    <p>Tracksview</p>\r\n                </Tab.Pane>\r\n            </Tab.Content>\r\n            </Tab.Container>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default AuthorizedView;\r\n\r\n","// src/state/fbase/fbaseActions.js\r\nimport { createAction } from '../utils';\r\nimport * as types from './fbaseTypes';\r\n\r\nconst actions = {\r\n    initFbase: () => createAction(types.FBASE_INIT),\r\n    authFbase: () => createAction(types.FBASE_AUTHENTICATE),\r\n    setUid: (uid) => createAction(types.FBASE_SET_UID, {uid}),\r\n    logout: () => createAction(types.FBASE_SIGN_OUT),\r\n};\r\nexport default actions;","// src/presenters/AuthorizedPresenter.js\r\nimport { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AuthorizedView from '../views/AuthorizedView';\r\nimport { useHistory } from 'react-router';\r\nimport userActions from '../state/user/userActions';\r\nimport fbaseActions from '../state/fbase/fbaseActions';\r\nimport LoadingView from '../views/LoadingView';\r\n\r\nfunction AuthorizedPresenter(props){\r\n    const { token, user } = props;\r\n    const history = useHistory();\r\n    \r\n    // makes sure the user is authorized\r\n    if(!token){\r\n        history.push(\"/login\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(token){\r\n            props.fetchSpotifyUser(token);\r\n        }\r\n    }, [token]);\r\n\r\n\r\n    return (user) ? <AuthorizedView username={user.display_name || user.id || \"\"}\r\n                        logout={() => props.logout()}/>\r\n                        : \r\n                        <LoadingView size=\"lg\" />;\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    token: state.auth.spotify.token,\r\n    user: state.user\r\n})\r\n  \r\nconst mapDispatchToProps = {\r\n    fetchSpotifyUser: userActions.fetchUser,\r\n    logout: fbaseActions.logout\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthorizedPresenter);","// src/state/user/userActions.js\r\nimport { createAction } from '../utils';\r\nimport * as types from './userTypes';\r\n\r\nconst actions = {\r\n    initUser: () => createAction(types.USER_INIT),\r\n    fetchUser: (token) => createAction(types.USER_GET, {token} ),\r\n};\r\nexport default actions;","// src/state/auth/authActions.js\r\nimport { createAction } from '../utils';\r\nimport * as types from './authTypes';\r\n\r\nconst actions = {\r\n    initAuth: () => createAction(types.AUTH_INIT_TEST),\r\n    saveSpotifyToken: (token, expires_in, spotify_string) => createAction(types.AUTH_SPOTIFY, {token, expires_in, spotify_string}),\r\n    saveSpotifyTokenError: (error) => createAction(types.AUTH_SPOTIFY_ERROR, {error}),\r\n    setSpotifyState: (spotify_string) => createAction(types.AUTH_SPOTIFY_SET_STATE, {spotify_string}),\r\n};\r\nexport default actions;","// src/presenters/LoginPresenter.js\r\nimport { connect } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport authActions from '../state/auth/authActions';\r\n\r\nfunction LoginPresenter(props){\r\n    const history = useHistory();\r\n    const params = useParams();\r\n\r\n    // state must be present and correct\r\n    if(!params.state || params.state !== localStorage.getItem(\"spotifyState\")){\r\n        console.error(\"Faulty URL parameter 'state' for login attempt.\");\r\n        history.push(\"/login\");\r\n    }\r\n\r\n    localStorage.removeItem(\"spotifyState\");\r\n\r\n    if(params.error){\r\n        props.saveSpotifyTokenError(params.error);\r\n        history.push(\"/login\");\r\n    }\r\n\r\n    if(params.token && params.expires_in){\r\n        props.saveSpotifyToken(params.token, params.expires_in);\r\n    }\r\n\r\n    return <div></div>;\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth\r\n})\r\n  \r\nconst mapDispatchToProps = {\r\n    // ... normally is an object full of action creators\r\n    saveSpotifyToken: authActions.saveSpotifyToken,\r\n    saveSpotifyTokenError: authActions.saveSpotifyTokenError\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPresenter);","// src/api/spotifyAuth.js\r\n\r\n// generates a random String used to validate that the request is actually from the user's browser\r\nfunction generateSpotifyString(len){\r\n    var arr = new Uint8Array((len || 10) / 2);\r\n    window.crypto.getRandomValues(arr);\r\n    return Array.from(arr, (dec)=>dec.toString(16).padStart(2, \"0\")).join('');\r\n}\r\n\r\n// Spotify's \"Implicit Grant Flow\", general info at:\r\n// https://developer.spotify.com/documentation/general/guides/authorization-guide/#implicit-grant-flow\r\nconst clientId = \"c0e19491232e4cadbff0efd339179f6d\";\r\nconst redirectUri = (process.env.NODE_ENV !== 'production') ? \"http://localhost:3000/#\" : \"https://martinfalke.github.io/spotify-project/#\"; //\"https://listify-app.github.io/#/login\";\r\n\r\n// https://developer.spotify.com/documentation/general/guides/scopes/#overview\r\n// encode spaces as %20 after reducing from array (done to easily add/remove scopes)\r\nconst scope = encodeURIComponent([\r\n    \"ugc-image-upload\",             // Upload cover image for playlists\r\n    \"playlist-modify-public\",       // Modify public playlists\r\n    \"playlist-modify-private\",      // Modify private playlists\r\n        //\"user-library-read\",            // View saved tracks, albums etc.\r\n        //\"user-library-modify\",          // Save/unsave tracks, albums etc.\r\n    \"playlist-read-private\",        // Get list of user's playlists\r\n    \"playlist-read-collaborative\",  // Include collaborative lists when getting user's playlists\r\n    \"user-read-private\",            // To only show search results available to the user's market\r\n].reduce( (total, d, i) => {\r\n    return (i !== 0) ? total + \" \" + d : d;\r\n}));\r\n\r\n// TODO: add \"show_dialog\" forced in development mode, to always prompt the developer for authorizing our app through Spotify\r\n\r\nconst authUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${scope}&response_type=token`;\r\n\r\nexport { redirectUri, generateSpotifyString };\r\nexport default authUrl;","// src/views/StartView.js\r\nimport Button from 'react-bootstrap/Button';\r\nimport LOGO from '../images/LOGO.svg';\r\nimport \"./StartView.scss\";\r\n\r\nfunction StartView(props){\r\n    return(\r\n        <div className=\"start-view\" >\r\n          <img src={LOGO} alt=\"Listify logo\"></img>\r\n          <div className=\"login-btn-wrapper\">\r\n            <Button variant=\"info\" href={props.loginUrl} className=\"login-btn\">\r\n            <i className=\"fa fa-lg fa-spotify\">\r\n              Login with Spotify\r\n              </i>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default StartView; ","// src/presenters/StartPresenter.js\r\nimport { useEffect, useState } from 'react';\r\nimport spotifyAuthUrl, { generateSpotifyString } from '../api/spotifyAuth';\r\nimport StartView from '../views/StartView';\r\n\r\nimport { connect } from 'react-redux';\r\nimport authActions from '../state/auth/authActions';\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction StartPresenter(props){\r\n    const { token } = props;\r\n    const history = useHistory();\r\n    const [spotifyString, setSpotifyString] = useState(null);\r\n\r\n    useEffect(function(){\r\n        const randomString = generateSpotifyString();\r\n        setSpotifyString(randomString);\r\n        props.setSpotifyState(randomString);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(token){\r\n            // user is already authorized, redirect to AuthorizedPresenter/View\r\n            history.push(\"/\");\r\n        }\r\n    }, [token]);\r\n\r\n    return <StartView loginUrl={`${spotifyAuthUrl}&state=${spotifyString}`} />;\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    token: state.auth.spotify.token,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    setSpotifyState: authActions.setSpotifyState,\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StartPresenter);","import './App.scss';\nimport React, { useEffect, useState } from 'react';\nimport { Switch, Redirect, Route, useHistory } from 'react-router';\nimport AuthorizedPresenter from './presenters/AuthorizedPresenter';\nimport LoginPresenter from './presenters/LoginPresenter';\nimport StartPresenter from './presenters/StartPresenter';\nimport { connect } from 'react-redux';\nimport fbaseActions from './state/fbase/fbaseActions';\nimport authActions from './state/auth/authActions';\nimport { isDateExpired } from './state/utils';\nimport { onAuthStateChanged } from 'firebase/auth';\n\nfunction App(props) {\n  const {fbaseApp, fbaseAuth, fbaseUid, token} = props;\n  const [initialized, setInitialized] = useState(false);\n  const history = useHistory();\n  \n  useEffect(()=>{\n    // set up firebase (app+rtdb) connection and auth\n    if(!initialized){\n      setInitialized(true);\n      props.initFirebase();\n    }else if(fbaseApp && fbaseAuth){\n      // authenticate anonymously with firebase,\n      // but only if auth info is not in session already\n      if(sessionStorage.length === 0){\n        props.authenticateFirebase();\n      }\n      let storedToken = localStorage.getItem(\"spotifyToken\");\n      let tokenExpiration = localStorage.getItem(\"spotifyExpiration\");\n      if(storedToken && tokenExpiration){\n        if(isDateExpired(new Date(Date.parse(tokenExpiration)))){\n          // stored token is expired, redirect to login page\n          localStorage.removeItem(\"spotifyToken\");\n          localStorage.removeItem(\"spotifyExpiration\");\n          sessionStorage.clear();\n          if(!token)\n            history.push(\"/login\");\n        }else if(!token){\n          // stored token is valid, save to redux\n          props.saveSpotifyToken(storedToken);\n        }\n      }else if(!token){\n        // no stored token, no redux token\n        // redirect to login\n        sessionStorage.clear();\n        history.push(\"/login\");\n      }\n\n      // save the uid of the user to redux\n      // when the user gets authenticated through firebase\n      onAuthStateChanged(fbaseAuth, (user) => {\n        if(user && !fbaseUid){\n          props.setUid(user.uid);\n        }\n      });\n    }\n  }, [fbaseAuth, token]);\n\n  return (\n    <Switch>\n      <Route path=\"/access_token=:token(.*)&token_type=Bearer&expires_in=:expires_in(.*)&state=:state(.*)\" component={LoginPresenter} />\n      <Route path=\"/error=:error(.*)&state=:state(.*)\" component={LoginPresenter} />\n      <Route exact path=\"/login\" component={StartPresenter} />\n      <Route exact path=\"/\" component={AuthorizedPresenter} />\n      <Route path=\"/*\" render={()=>{return <Redirect to=\"/\" />;}} />\n    </Switch>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  token: state.auth.spotify.token,\n  fbaseApp: state.fbase.app,\n  fbaseAuth: state.fbase.auth,\n  fbaseUid: state.fbase.uid,\n})\n\nconst mapDispatchToProps = {\n  initFirebase: fbaseActions.initFbase,\n  authenticateFirebase: fbaseActions.authFbase,\n  setUid: fbaseActions.setUid,\n  saveSpotifyToken: authActions.saveSpotifyToken,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// src/index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './state/store';\n\nimport { HashRouter } from 'react-router-dom';\n\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter hashType=\"noslash\">\n        <App />\n      </HashRouter> \n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}