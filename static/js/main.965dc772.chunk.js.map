{"version":3,"sources":["api/firebaseConfig.js","state/auth/authTypes.js","state/utils.js","state/auth/authReducer.js","state/search/searchTypes.js","state/search/searchReducer.js","state/rootReducer.js","state/auth/authActions.js","state/auth/authSagas.js","state/search/searchActions.js","state/search/searchSagas.js","state/rootSaga.js","state/store.js","views/AuthorizedView.js","api/spotifyUtil.js","api/spotifyUser.js","presenters/AuthorizedPresenter.js","presenters/LoginPresenter.js","api/spotifyAuth.js","views/StartView.js","presenters/StartPresenter.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","AUTH_INIT_TEST","AUTH_SPOTIFY","AUTH_SPOTIFY_ERROR","AUTH_SPOTIFY_SET_STATE","createAction","type","payload","createReducer","initialState","handlers","state","action","hasOwnProperty","status","spotify","token","expires_in","spotify_string","error","types","localStorage","setItem","SEARCH_INIT_TEST","latestQuery","activePage","isExact","resulTypes","combineReducers","auth","search","initAuth","saveSpotifyToken","saveSpotifyTokenError","setSpotifyState","handleAuthInit","take","console","log","all","takeLatest","handleSearchInit","rootSaga","fork","reduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","compose","applyMiddleware","run","AuthorizedView","props","Tabs","className","defaultActiveKey","id","Tab","eventKey","title","Table","striped","bordered","hover","variant","disabled","username","display_name","country","baseUrl","getCurrentUser","endpoint","method","content_type","bodyObj","finalEndpoint","startsWith","headers","parameters","Object","keys","length","JSON","Stringify","fetch","spotifyApiCall","connect","history","useHistory","push","useState","user","setUser","setPromise","useEffect","then","r","json","res","mapDispatchToProps","authActions","params","useParams","getItem","removeItem","scope","encodeURIComponent","reduce","total","d","i","authUrl","StartView","firebaseOptions","Button","href","loginUrl","spotifyString","setSpotifyString","randomString","len","arr","Uint8Array","crypto","getRandomValues","Array","from","dec","toString","padStart","join","generateSpotifyString","spotifyAuthUrl","stringify","firebase","apps","options","App","exact","path","component","AuthorizedPresenter","LoginPresenter","StartPresenter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","ReactDOM","render","StrictMode","hashType","document","getElementById"],"mappings":"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","file":"static/js/main.965dc772.chunk.js","sourcesContent":["// src/api/firebaseConfig.js\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyD8zs9oK-BvtUICviOHLrVpcNOzbMvUR_k\",\r\n    authDomain: \"listify-project-56d94.firebaseapp.com\",\r\n    databaseURL: \"https://listify-project-56d94-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"listify-project-56d94\",\r\n    storageBucket: \"listify-project-56d94.appspot.com\",\r\n    messagingSenderId: \"108020178071\",\r\n    appId: \"1:108020178071:web:b81127db0ed946e8abddd2\"\r\n};\r\nexport default firebaseConfig;\r\n  ","// src/state/auth/authTypes.js\r\nexport const AUTH_INIT_TEST = 'AUTH_INIT_TEST';\r\nexport const AUTH_SPOTIFY = 'AUTH_SPOTIFY';\r\nexport const AUTH_SPOTIFY_ERROR = 'AUTH_SPOTIFY_ERROR';\r\nexport const AUTH_SPOTIFY_SET_STATE = 'AUTH_SPOTIFY_SET_STATE';","// redux/utils.js\r\n\r\n// ActionHelpers\r\nconst asyncTypes = {\r\n    // the three states of a promise\r\n    PENDING: 'PENDING',\r\n    SUCCESS: 'SUCCESS',\r\n    ERROR: 'ERROR'\r\n};\r\n\r\nconst syncTypes = {\r\n    // the three states of any non-promisable action\r\n    STARTED: 'STARTED',\r\n    COMPLETED: 'COMPLETED',\r\n    ERROR: 'ERROR'\r\n};\r\n\r\n\r\n/* creates an action type each for the provided action with\r\n* appended '_{STATUS}' to the access key, for example:\r\n*   We want to create an async action for logging in, we call createAsyncTypes\r\n*   with the argument 'LOGIN', the returned object will then contain three\r\n*   properties with the keys 'PENDING', 'SUCCESS', and 'ERROR' corresponding to\r\n*   the values 'LOGIN_PENDING', 'LOGIN_SUCCESS', and 'LOGIN_ERROR' respectively.\r\n*   This way we can perform operations on each status for the login action and\r\n*   abstractly access the three statuses of a promise action in our functions that call API's.\r\n*/\r\nexport const createAsyncTypes = typeString => {\r\n    Object.values(asyncTypes).reduce((acc, curr) => {\r\n        acc[curr] = `${typeString}_${curr}`;\r\n        return acc;\r\n    }, {});\r\n};\r\n\r\nexport const createSyncTypes = typeString => {\r\n    Object.values(syncTypes).reduce((acc, curr) => {\r\n        acc[curr] = `${typeString}_${curr}`;\r\n        return acc;\r\n    }, {});\r\n};\r\n\r\nexport const createAction =\r\n    (type, payload = {}) => ({type, ...payload});\r\n\r\n// create reducer given its handlers and default/initial state\r\nexport const createReducer = (initialState, handlers) =>\r\n    // the reducer takes an action and the current state to update the state with the action\r\n    (state = initialState, action) => {\r\n        // there is a handler for the action type, call it\r\n        if(handlers.hasOwnProperty(action.type))\r\n            return handlers[action.type](state, action);\r\n        // there is no handler for the action type, leave state unchanged\r\n        else\r\n            return state;\r\n    }","// src/state/auth/authReducer.js\r\nimport * as types from './authTypes';\r\nimport { createReducer } from '../utils';\r\n\r\nconst initialState = {\r\n    status: null,\r\n    spotify: {\r\n        token: null,\r\n        expires_in: 0,\r\n        spotify_string: null,\r\n        error: null\r\n    }\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n    [types.AUTH_INIT_TEST]: (state, action) => {\r\n        return { ...state, status: \"initialized\"};\r\n    },\r\n    [types.AUTH_SPOTIFY]: (state, action) => {\r\n        return { ...state,\r\n            spotify: {\r\n                token: action.token,\r\n                expires_in: action.expires_in,\r\n                spotify_string: state.spotify.spotify_string,\r\n                error: null\r\n            }\r\n        }\r\n    },\r\n    [types.AUTH_SPOTIFY_ERROR]: (state, action) => {\r\n        return { ...state,\r\n            spotify: {\r\n                token: null,\r\n                expires_in: null,\r\n                spotify_string: state.spotify.spotify_string,\r\n                error: action.error\r\n            }\r\n        }\r\n    },\r\n    [types.AUTH_SPOTIFY_SET_STATE]: (state, action) => {\r\n        localStorage.setItem(\"spotifyState\", action.spotify_string);\r\n        return { ...state,\r\n            spotify: {\r\n                ...state.spotify,\r\n                spotify_string: action.spotify_string\r\n            }\r\n        }\r\n    }\r\n});","// src/state/search/searchTypes.js\r\nexport const SEARCH_INIT_TEST = 'SEARCH_INIT_TEST';","// src/state/search/searchReducer.js\r\nimport * as types from './searchTypes';\r\nimport { createReducer } from '../utils';\r\n\r\nconst initialState = {\r\n    status: null,\r\n    latestQuery: null,\r\n    activePage: null,\r\n    isExact: false,\r\n    resulTypes: [\"track\"]\r\n}\r\n\r\nexport default createReducer(initialState, {\r\n    [types.SEARCH_INIT_TEST]: (state, action) => {\r\n        return { ...state, status: \"initialized\"};\r\n    },\r\n});","// src/state/rootReducer.js\r\nimport { combineReducers } from \"redux\";\r\nimport auth from \"./auth/authReducer\";\r\nimport search from './search/searchReducer';\r\n// TODO: import different reducers\r\n\r\n// TODO: add imported reducers in object\r\nexport default combineReducers(\r\n    { auth, search }\r\n);","// src/state/auth/authActions.js\r\nimport { createAction } from '../utils';\r\nimport * as types from './authTypes';\r\n\r\nexport default {\r\n    initAuth: () => createAction(types.AUTH_INIT_TEST),\r\n    saveSpotifyToken: (token, expires_in, spotify_string) => createAction(types.AUTH_SPOTIFY, {token, expires_in, spotify_string}),\r\n    saveSpotifyTokenError: (error) => createAction(types.AUTH_SPOTIFY_ERROR, {error}),\r\n    setSpotifyState: (spotify_string) => createAction(types.AUTH_SPOTIFY_SET_STATE, {spotify_string}),\r\n}","// src/state/auth/authSagas.js\r\nimport { fork, all, put, take, takeLatest } from 'redux-saga/effects';\r\nimport * as types from './authTypes';\r\nimport actions from './authActions';\r\n\r\nconst firebase = null; // TODO: set up firebase\r\nfunction signIn() {\r\n    return firebase.auth().signInAnonymously()\r\n      .then(user => ({ user }))\r\n      .catch(error => ({ error }));\r\n  }\r\n\r\nfunction* handleAuthInit(){\r\n    while(true){\r\n        yield take(types.AUTH_INIT_TEST);\r\n\r\n        console.log(\"reached initial saga (auth)\");\r\n    }\r\n}\r\n\r\nexport default function*() {\r\n    yield all([\r\n        takeLatest(types.AUTH_INIT_TEST, handleAuthInit)\r\n    ])\r\n};","// src/state/search/searchActions.js\r\nimport { createAction } from '../utils';\r\nimport * as types from './searchTypes';\r\n\r\nexport default {\r\n    initSearch: () => createAction(types.SEARCH_INIT_TEST),\r\n}","// src/state/search/searchSagas.js\r\nimport { fork, all, put, take, takeLatest } from 'redux-saga/effects';\r\nimport * as types from './searchTypes';\r\nimport actions from './searchActions';\r\n\r\nfunction* handleSearchInit(){\r\n    while(true){\r\n        yield take(types.SEARCH_INIT_TEST);\r\n\r\n        console.log(\"reached initial saga (search)\");\r\n    }\r\n}\r\n\r\nexport default function*() {\r\n    yield all([\r\n        takeLatest(types.SEARCH_INIT_TEST, handleSearchInit)\r\n    ])\r\n};","// src/state/rootReducer.js\r\nimport { fork } from 'redux-saga/effects';\r\nimport auth from './auth/authSagas';\r\nimport search from './search/searchSagas';\r\n\r\nexport default function* rootSaga() {\r\n    yield fork(auth);\r\n    yield fork(search);\r\n    // yield fork(module);\r\n    console.log(\"Root saga initialized and reached.\");\r\n}","// src/state/store.js\r\n\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from './rootReducer';\r\nimport rootSaga from './rootSaga';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nconst reduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(rootReducer, compose(applyMiddleware(sagaMiddleware), reduxDevTools));\r\n\r\nexport default store;\r\n\r\nsagaMiddleware.run(rootSaga);","// src/views/AuthorizedView.js\r\nimport './AuthorizedView.scss';\r\nimport Table from 'react-bootstrap/Table'\r\nimport Tab from 'react-bootstrap/Tab'\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport React from 'react'\r\n\r\n\r\nfunction AuthorizedView(props){\r\n    return (\r\n        <div>\r\n            <Tabs className=\"tabs\" defaultActiveKey=\"tracks\" id=\"home-page-tabs\">\r\n                <Tab eventKey=\"playlist\" title=\"Playlists\">\r\n                    <p>Will display playlists eventually</p>\r\n                </Tab>\r\n                <Tab eventKey=\"tracks\" title=\"Tracks\">\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Artist</th>\r\n                                <th>Song Name</th>\r\n                                <th>Album</th>\r\n                            </tr>\r\n                        </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>1</td>\r\n                                    <td>The Weeknd</td>\r\n                                    <td>Blinding Lights</td>\r\n                                    <td>After Hours</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>2</td>\r\n                                    <td>The Weeknd</td>\r\n                                    <td>In Your Eyes</td>\r\n                                    <td>After Hours</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>3</td>\r\n                                    <td>Justin Bieber</td>\r\n                                    <td>Peaches</td>\r\n                                    <td>Justice</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>4</td>\r\n                                    <td>Molly Sandén</td>\r\n                                    <td>Nån annan nu</td>\r\n                                    <td>Nån annan nu</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>5</td>\r\n                                    <td>Lil Nas X</td>\r\n                                    <td>Montero</td>\r\n                                    <td>Montero</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>6</td>\r\n                                    <td>Alesso</td>\r\n                                    <td>Going Dumb</td>\r\n                                    <td>Going Dumb</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>7</td>\r\n                                    <td>Tusse</td>\r\n                                    <td>Voices</td>\r\n                                    <td>Voices</td>\r\n                                </tr>\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                </Tab>\r\n                <Tab eventKey=\"search\" title=\"Search\">\r\n                <p>Search</p>\r\n                </Tab>\r\n                <Tab className=\"listify\" eventKey=\"logo\" title=\"Listify\" disabled></Tab>\r\n            </Tabs>\r\n            <div className=\"App\">\r\n                <p>Spotify login success!</p>\r\n                <h2>Sample API data from authorized user</h2>\r\n                <h5>Username</h5>\r\n                <p>{props.username}</p>\r\n                <h5>Display name</h5>\r\n                <p>{props.display_name}</p>\r\n                <h5>Country Code</h5>\r\n                <p>{props.country}</p>\r\n            </div>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default AuthorizedView;","// src/api/spotifyUtil.js\r\n\r\nconst baseUrl = \"https://api.spotify.com/v1\";\r\n\r\nconst requestTypes = {\r\n    GET: \"GET\",\r\n    POST: \"POST\",\r\n    PUT: \"PUT\",\r\n    DELETE: \"DELETE\"\r\n}\r\n\r\nconst spotifyApiCall = (token, endpoint, method=\"GET\", content_type=\"application/json\", bodyObj={}) => {\r\n    // add slash if missing\r\n    const finalEndpoint = (endpoint.startsWith(\"/\")) ? endpoint : \"/\" + endpoint;\r\n    // embed token\r\n    const headers = {\r\n        'Authorization': ('Bearer ' + token),\r\n    }\r\n    const parameters = {\r\n        method: method,\r\n        headers: headers\r\n    }\r\n    // add the body object to the parameters if it isn't empty\r\n    if(Object.keys(bodyObj).length !== 0){\r\n        parameters[\"body\"] = JSON.Stringify(bodyObj);\r\n        headers[\"Content-Type\"] = content_type;\r\n    }\r\n    \r\n    return fetch(baseUrl+finalEndpoint, parameters);\r\n}\r\n\r\nexport { requestTypes, spotifyApiCall };","// src/api/spotifyUser.js\r\nimport { spotifyApiCall } from './spotifyUtil';\r\n\r\nconst getCurrentUser = (token) => {\r\n    return spotifyApiCall(token, '/me');\r\n}\r\n\r\nexport { getCurrentUser };","// src/presenters/AuthorizedPresenter.js\r\nimport { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AuthorizedView from '../views/AuthorizedView';\r\nimport { getCurrentUser } from \"../api/spotifyUser\";\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction AuthorizedPresenter(props){\r\n    const { token } = props;\r\n    const history = useHistory();\r\n    if(!token){\r\n        history.push(\"/\");\r\n    }\r\n    // TODO: move retrieval of user to the redux store\r\n    const [user, setUser] = useState(null);\r\n    const [promise, setPromise] = useState(null);\r\n    useEffect(() => {\r\n        setPromise(getCurrentUser(token).then(r=>r.json()).then(res=>setUser(res)));\r\n    }, []);\r\n\r\n    return (user) ? <AuthorizedView username={user.id || \"\"} country={user.country || \"\"} display_name={user.display_name || \"\"}/> : <div className=\"App\">Fetching user..</div>;\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    token: state.auth.spotify.token\r\n})\r\n  \r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthorizedPresenter);","// src/presenters/LoginPresenter.js\r\nimport { connect } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport authActions from '../state/auth/authActions';\r\n\r\nfunction LoginPresenter(props){\r\n    const history = useHistory();\r\n    const params = useParams();\r\n\r\n    // state must be present and correct\r\n    if(!params.state || params.state != localStorage.getItem(\"spotifyState\")){\r\n        console.error(\"Faulty URL parameter \\'state\\' for login attempt.\");\r\n        history.push(\"/\");\r\n    }\r\n\r\n    localStorage.removeItem(\"spotifyState\");\r\n\r\n    if(params.error){\r\n        props.saveSpotifyTokenError(params.error);\r\n        history.push(\"/\");\r\n    }\r\n\r\n    if(params.token && params.expires_in){\r\n        props.saveSpotifyToken(params.token, params.expires_in);\r\n        history.push(\"/authorized\");\r\n    }\r\n\r\n    return <div></div>;\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth\r\n})\r\n  \r\nconst mapDispatchToProps = {\r\n    // ... normally is an object full of action creators\r\n    saveSpotifyToken: authActions.saveSpotifyToken,\r\n    saveSpotifyTokenError: authActions.saveSpotifyTokenError\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPresenter);","// src/api/spotifyAuth.js\r\n\r\n// generates a random String used to validate that the request is actually from the user's browser\r\nfunction generateSpotifyString(len){\r\n    var arr = new Uint8Array((len || 10) / 2);\r\n    window.crypto.getRandomValues(arr);\r\n    return Array.from(arr, (dec)=>dec.toString(16).padStart(2, \"0\")).join('');\r\n}\r\n\r\n// Spotify's \"Implicit Grant Flow\", general info at:\r\n// https://developer.spotify.com/documentation/general/guides/authorization-guide/#implicit-grant-flow\r\nconst clientId = \"c0e19491232e4cadbff0efd339179f6d\";\r\nconst redirectUri = (process.env.NODE_ENV !== 'production') ? \"http://localhost:3000/#\" : \"https://martinfalke.github.io/spotify-project/#\"; //\"https://listify-app.github.io/#/login\";\r\n\r\n// https://developer.spotify.com/documentation/general/guides/scopes/#overview\r\n// encode spaces as %20 after reducing from array (done to easily add/remove scopes)\r\nconst scope = encodeURIComponent([\r\n    \"ugc-image-upload\",             // Upload cover image for playlists\r\n    \"playlist-modify-public\",       // Modify public playlists\r\n    \"playlist-modify-private\",      // Modify private playlists\r\n        //\"user-library-read\",            // View saved tracks, albums etc.\r\n        //\"user-library-modify\",          // Save/unsave tracks, albums etc.\r\n    \"playlist-read-private\",        // Get list of user's playlists\r\n    \"playlist-read-collaborative\",  // Include collaborative lists when getting user's playlists\r\n    \"user-read-private\",            // To only show search results available to the user's market\r\n].reduce( (total, d, i) => {\r\n    return (i !== 0) ? total + \" \" + d : d;\r\n}));\r\n\r\n// TODO: add \"show_dialog\" forced in development mode, to always prompt the developer for authorizing our app through Spotify\r\n\r\nconst authUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&redirect_uri=${encodeURIComponent(redirectUri)}&scope=${scope}&response_type=token`;\r\n\r\nexport { redirectUri, generateSpotifyString };\r\nexport default authUrl;","// src/views/StartView.js\r\nimport Button from 'react-bootstrap/Button';\r\nimport \"./StartView.scss\";\r\n\r\nfunction StartView(props){\r\n    return(\r\n        <div className=\"start-view\" >\r\n          {/* <p>Firebase config options</p>\r\n          <code>\r\n            <pre>{props.firebaseOptions}</pre>\r\n          </code> */}\r\n          <p>{console.log(`Firebase config options: ${props.firebaseOptions}`)}</p>\r\n          <header className=\"login-header\">\r\n            <h1>Listify</h1>\r\n          </header>\r\n          <Button variant=\"secondary\" href={props.loginUrl} className=\"login-bnt\">\r\n          <i className=\"fa fa-spotify\">\r\n            Login with Spotify\r\n            </i>\r\n          </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default StartView; ","// src/presenters/StartPresenter.js\r\nimport { useEffect, useState } from 'react';\r\nimport spotifyAuthUrl, { generateSpotifyString } from '../api/spotifyAuth';\r\nimport StartView from '../views/StartView';\r\n\r\nimport { connect } from 'react-redux';\r\nimport authActions from '../state/auth/authActions';\r\n\r\nimport firebase from 'firebase';\r\n\r\nfunction StartPresenter(props){\r\n    const [spotifyString, setSpotifyString] = useState(null);\r\n\r\n    useEffect(function(){\r\n        const randomString = generateSpotifyString();\r\n        setSpotifyString(randomString);\r\n        props.setSpotifyState(randomString);\r\n    }, []);\r\n\r\n    return <StartView loginUrl={`${spotifyAuthUrl}&state=${spotifyString}`} firebaseOptions={JSON.stringify(firebase.apps[0].options, null, 2)}/>;\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setSpotifyState: authActions.setSpotifyState,\r\n}\r\nexport default connect(null, mapDispatchToProps)(StartPresenter);","import './App.scss';\nimport React from 'react';\nimport { Switch, Route } from 'react-router';\nimport AuthorizedPresenter from './presenters/AuthorizedPresenter';\nimport LoginPresenter from './presenters/LoginPresenter';\nimport StartPresenter from './presenters/StartPresenter';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/authorized\" component={AuthorizedPresenter} />\n      <Route path=\"/access_token=:token(.*)&token_type=Bearer&expires_in=:expires_in(.*)&state=:state(.*)\" component={LoginPresenter} />\n      <Route path=\"/error=:error(.*)&state=:state(.*)\" component={LoginPresenter} />\n      <Route exact path=\"/\" component={StartPresenter} />\n    </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// src/index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport firebase from 'firebase/app';\nimport firebaseConfig from './api/firebaseConfig';\nimport { Provider } from 'react-redux';\nimport store from './state/store';\n\nimport { HashRouter } from 'react-router-dom';\n\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter hashType=\"noslash\">\n        <App />\n      </HashRouter> \n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}